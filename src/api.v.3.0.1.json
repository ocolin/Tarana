{
  "openapi": "3.0.1",
  "info": {
    "title": "Tarana NorthBound APIs",
    "version": "1.5.3 Operator Operations APIs",
    "description": "This is Tarana Northbound APIs Based on OpenAPI 3.0 specification."
  },
  "servers": [
    {
      "url": "https://api.cloud.taranawireless.com"
    }
  ],
  "tags": [
    {
      "name": "Operator",
      "description": "Supported operation on Operator"
    },
    {
      "name": "Region",
      "description": "Supported operation on Region"
    },
    {
      "name": "Market",
      "description": "Supported operation on Market"
    },
    {
      "name": "Site",
      "description": "Supported operation on Site"
    },
    {
      "name": "Cell",
      "description": "Supported operation on Cell"
    },
    {
      "name": "Sector",
      "description": "Supported operation on Sector"
    },
    {
      "name": "Retailer",
      "description": "Supported operation on Retailer"
    },
    {
      "name": "Device Config & Operations",
      "description": "Supported operations on Device"
    },
    {
      "name": "User",
      "description": "Supported operations on User"
    },
    {
      "name": "Diagnostics",
      "description": "Supported operations on Radio"
    }
  ],
  "paths": {
    "/v1/network/radios/{serialNumber}": {
      "get": {
        "operationId": "getDeviceConfig",
        "deprecated": true,
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Get device config. This api is deprecated, please use /v2/network/radios/{serialNumber} instead",
        "parameters": [
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigV1Response"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigV1Response"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigV1Response"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigV1Response"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigV1Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "updateDeviceConfig",
        "deprecated": true,
        "summary": "Update device config details. This api is deprecated, please use /v2/network/radios/{serialNumber} instead",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MODELb0ff8d"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/services": {
      "patch": {
        "operationId": "updateService",
        "summary": "Update device service",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/start-special-metrics-mode": {
      "post": {
        "operationId": "startSpecialTelemetryMode",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Start special telemetry mode",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Special telemetry mode started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/stop-special-metrics-mode": {
      "post": {
        "operationId": "stopSpecialTelemetryMode",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Stop special telemetry mode",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Special telemetry mode stopped successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/special-metrics-mode-status": {
      "get": {
        "operationId": "getSpecialTelemetryModeStatus",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Get special telemetry mode status",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Special telemetry fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpecialTelemetryResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/network/radios/{serialNumber}": {
      "get": {
        "operationId": "getDeviceConfigV2",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Get device config",
        "parameters": [
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "updateDeviceConfigV2",
        "summary": "Update device config details ",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceConfigUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios": {
      "get": {
        "operationId": "getDevicesConfig",
        "deprecated": true,
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Fetch device config in bulk. This api is deprecated, please use /v2/network/radios instead",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeviceConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeviceConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeviceConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeviceConfigResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDeviceConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "updateDevicesConfig",
        "deprecated": true,
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Update device config in bulk. This api is deprecated, please use /v2/network/radios instead",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateDeviceConfigRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateDeviceConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateDeviceConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateDeviceConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateDeviceConfigResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUpdateDeviceConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v2/network/radios": {
      "get": {
        "operationId": "getDevicesConfigV2",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Fetch device config in bulk",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "updateDevicesConfigV2",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Update device config in bulk ",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateDeviceConfig"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/search": {
      "post": {
        "operationId": "searchDevices",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Search available devices",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchDeviceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDeviceResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDeviceResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchDeviceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/delete": {
      "post": {
        "operationId": "deleteDisconnectedRns",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Delete disconnected RN devices",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NorthboundDeleteDevicesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/mac-search": {
      "post": {
        "operationId": "searchMacAddress",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Search subscriber mac address",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MacAddressSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacAddressSearchApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacAddressSearchApiResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacAddressSearchApiResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MacAddressSearchApiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/upgrade": {
      "post": {
        "operationId": "batchInstallSoftware",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Install software on multiple devices.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SoftwareInstallBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallBatchResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallBatchResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallBatchResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallBatchResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/reboot": {
      "post": {
        "operationId": "rebootDevice",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Device Reboot",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootDeviceResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootDeviceResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootDeviceResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootDeviceResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootDeviceResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/speed-test/set-baseline": {
      "post": {
        "operationId": "setBaseline",
        "tags": [
          "Diagnostics"
        ],
        "summary": "Set Speed Test Baseline",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpeedTestSetBaselineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Baseline changed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeedTestSetBaselineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeedTestSetBaselineResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeedTestSetBaselineResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeedTestSetBaselineResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeedTestSetBaselineResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/reboot": {
      "post": {
        "operationId": "rebootDevices",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Devices reboot batch operation",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NorthboundRebootBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootBatchResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootBatchResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootBatchResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RebootBatchResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/snapshot": {
      "post": {
        "operationId": "createSnapshot",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Create device snapshot",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/push-latest-config": {
      "post": {
        "operationId": "pushLatestConfig",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Push initial device configuration",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundPushLatestConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundPushLatestConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundPushLatestConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundPushLatestConfigResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundPushLatestConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/save-config-to-disk": {
      "post": {
        "operationId": "saveConfig",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Saves device configuration",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSaveDeviceConfigResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSaveDeviceConfigResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSaveDeviceConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSaveDeviceConfigResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSaveDeviceConfigResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/upload-snapshot": {
      "post": {
        "operationId": "uploadSnapshot",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Upload device snapshot.",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category of the snapshot. Example: User Generated",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DEVICE_GENERATED"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSnapshotResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/software-packages": {
      "get": {
        "operationId": "listSoftware",
        "summary": "Get list of software package details from inventory",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "packageId",
            "description": "Software package id. Example: SYS.A3.B10.XXX.0.995.000.01",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bnCompatible",
            "description": "Whether software package is BN compatible. Example: true",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "rnCompatible",
            "in": "query",
            "description": "Whether software package is RN compatible. Example: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "buildTimeMillis"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "DESC"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records in a single page. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareMetadataSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareMetadataSearchResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareMetadataSearchResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareMetadataSearchResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/upgrade": {
      "post": {
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Install software on a device",
        "operationId": "installSoftware",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NorthboundSoftwareInstallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareInstallStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/reconnect": {
      "post": {
        "operationId": "resetConnections",
        "summary": "Initiate BN Search / Reconnect RN",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "description": "Serial number of the device. Example: S111F1202200226",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetConnectionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetConnectionsResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetConnectionsResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetConnectionsResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetConnectionsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/speed-test": {
      "post": {
        "operationId": "startSpeedTest",
        "summary": "Start speed test",
        "tags": [
          "Diagnostics"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "description": "Serial number of the device. Example: S111F1202200226",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundStartSpeedTestResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundStartSpeedTestResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundStartSpeedTestResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundStartSpeedTestResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundStartSpeedTestResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/reacquire-spectrum": {
      "post": {
        "tags": [
          "Device Config & Operations"
        ],
        "operationId": "deregister",
        "summary": "Deregister a cbsd",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "description": "Serial number of the device. Example: S111F1202200226",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/mute": {
      "post": {
        "operationId": "updateMuteState",
        "summary": "Mute the BN",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/unmute": {
      "post": {
        "operationId": "updateUnmuteState",
        "summary": "Unmute the BN",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUpdateMuteStateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/ping": {
      "post": {
        "operationId": "startPingTest",
        "summary": "Start ping test",
        "tags": [
          "Diagnostics"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartPingTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPingTestResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPingTestResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPingTestResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPingTestResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPingTestResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/traceroute": {
      "post": {
        "operationId": "startTracerouteTest",
        "summary": "Start traceroute test",
        "tags": [
          "Diagnostics"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartTracerouteTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartTracerouteResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartTracerouteResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartTracerouteResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartTracerouteResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartTracerouteResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators/custom-attributes": {
      "get": {
        "operationId": "getCustomAttributeNames",
        "summary": "Get custom attributes names for operator",
        "tags": [
          "Operator"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomAttributeResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "setCustomAttributeNames",
        "tags": [
          "Operator"
        ],
        "summary": "Set custom attributes names for operator",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MODELfbe9db"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators/collectors": {
      "get": {
        "operationId": "getCollectors",
        "summary": "Get all collector configured.",
        "tags": [
          "Operator"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorPaginatedResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorPaginatedResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorPaginatedResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorPaginatedResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorPaginatedResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "addCollector",
        "tags": [
          "Operator"
        ],
        "summary": "Configure a new collector",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCollector"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators/collectors/{collectorName}": {
      "get": {
        "operationId": "getCollector",
        "summary": "Get collector by name.",
        "tags": [
          "Operator"
        ],
        "parameters": [
          {
            "name": "collectorName",
            "in": "path",
            "description": "Telemetry Collector name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateCollector",
        "summary": "Update exiting collector",
        "tags": [
          "Operator"
        ],
        "parameters": [
          {
            "name": "collectorName",
            "in": "path",
            "description": "Telemetry Collector name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NorthboundCollectorUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteCollector",
        "summary": "Delete collector by name.",
        "tags": [
          "Operator"
        ],
        "parameters": [
          {
            "name": "collectorName",
            "in": "path",
            "description": "Telemetry Collector name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundCollectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators": {
      "get": {
        "operationId": "getOperatorDetails",
        "summary": "Get operator details",
        "tags": [
          "Operator"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundOperatorDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundOperatorDetailsResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundOperatorDetailsResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundOperatorDetailsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "operationId": "updateOperator",
        "tags": [
          "Operator"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MODELb0ff8d"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators/policies/delete": {
      "post": {
        "operationId": "deletePolicy",
        "summary": "Delete operator policy",
        "tags": [
          "Operator"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteOperatorPolicy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators/policies": {
      "patch": {
        "operationId": "updatePolicy",
        "summary": "Update operator policy",
        "tags": [
          "Operator"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions": {
      "get": {
        "operationId": "getRegions",
        "summary": "Get all regions",
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id.  Example: id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "id",
              "x-example": "id",
              "enum": [
                "id",
                "name",
                "operatorId"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC.  Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "addRegion",
        "summary": "Add a new region",
        "tags": [
          "Region"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRegion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}": {
      "get": {
        "operationId": "getRegionDetails",
        "summary": "Get region details",
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateRegion",
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegionUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteRegion",
        "summary": "Delete a region",
        "tags": [
          "Region"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundRegionDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets": {
      "get": {
        "operationId": "getMarkets",
        "summary": "Get all markets",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id. Example: id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "id",
              "enum": [
                "id",
                "name",
                "regionId",
                "networkProfile"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC. Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "addMarket",
        "summary": "Add a new market",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMarket"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}": {
      "get": {
        "operationId": "getMarketDetails",
        "summary": "Get market details",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateMarket",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarketUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteMarket",
        "summary": "Delete a market",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/change-parent": {
      "put": {
        "operationId": "changeParent",
        "summary": "Change parent of a market",
        "tags": [
          "Market"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeMarketParentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites": {
      "get": {
        "operationId": "getSites",
        "summary": "Get all sites",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id. Example: id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "id",
              "enum": [
                "id",
                "name",
                "marketId",
                "networkProfile"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC. Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "addSite",
        "summary": "Add a new site",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}": {
      "get": {
        "operationId": "getSiteDetails",
        "summary": "Get site details",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateSite",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteSite",
        "summary": "Delete a site",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}/change-parent": {
      "put": {
        "operationId": "change-parent",
        "summary": "Change parent of a site",
        "tags": [
          "Site"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeSiteParentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}/cells": {
      "get": {
        "operationId": "getCells",
        "summary": "Get all cells",
        "tags": [
          "Cell"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id. Example: id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "id",
              "enum": [
                "id",
                "name",
                "siteId",
                "radioSetId",
                "networkProfile"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC. Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "addCell",
        "summary": "Add a new cell",
        "tags": [
          "Cell"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCell"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}/cells/{cellName}": {
      "get": {
        "operationId": "getCellDetails",
        "summary": "Get cell details",
        "tags": [
          "Cell"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateCell",
        "tags": [
          "Cell"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CellUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteCell",
        "summary": "Delete a cell",
        "tags": [
          "Cell"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example:  Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}/cells/{cellName}/change-parent": {
      "put": {
        "operationId": "changeParent",
        "summary": "Change parent of a cell",
        "tags": [
          "Cell"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCellParentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}/cells/{cellName}/sectors": {
      "get": {
        "operationId": "getSectors",
        "summary": "Get all sectors",
        "tags": [
          "Sector"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id. Example: id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "id",
              "enum": [
                "id",
                "name",
                "cellId",
                "networkId",
                "networkProfile",
                "radioOperatorId"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC. Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "addSector",
        "summary": "Add a new sector",
        "tags": [
          "Sector"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSector"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}/cells/{cellName}/sectors/{sectorName}": {
      "get": {
        "operationId": "getSectorDetails",
        "summary": "Get sector details",
        "tags": [
          "Sector"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectorName",
            "in": "path",
            "description": "Sector Name. Example: Sector-2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateSector",
        "tags": [
          "Sector"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectorName",
            "in": "path",
            "description": "Sector Name. Example: Sector-2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SectorUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteSector",
        "summary": "Delete a sector",
        "tags": [
          "Sector"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectorName",
            "in": "path",
            "description": "Sector Name. Example: Sector-2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SectorDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/regions/{regionName}/markets/{marketName}/sites/{siteName}/cells/{cellName}/sectors/{sectorName}/assign-bn": {
      "put": {
        "operationId": "updateOrphanDevice",
        "summary": "Update an existing orphan device",
        "tags": [
          "Sector"
        ],
        "parameters": [
          {
            "name": "regionName",
            "in": "path",
            "description": "Region Name. Example: Alaska",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "marketName",
            "in": "path",
            "description": "Market Name. Example: Juneau",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site Name. Example: Nugget Mall Rooftop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cellName",
            "in": "path",
            "description": "Cell Name. Example: Cell-0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectorName",
            "in": "path",
            "description": "Sector Name. Example: Sector-2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserOrphanDeviceUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators/orphans": {
      "get": {
        "operationId": "getOrphanDevices",
        "summary": "Get Orphan devices",
        "tags": [
          "Operator"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id. Example: id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "id",
              "enum": [
                "id",
                "name",
                "regionId",
                "serialNumber",
                "masterId",
                "type",
                "operatorId",
                "marketId",
                "siteId",
                "cellId",
                "sectorId",
                "ip",
                "managementSubnet"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC. Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "To filter response based on the device type. Example: BN",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "RN",
                "BN"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/operators/devices": {
      "get": {
        "operationId": "getDevices",
        "deprecated": true,
        "summary": "Get devices. This api is deprecated, please use /v1/network/radios/search instead",
        "tags": [
          "Operator"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher.  Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "connectedToPrimaryBn",
            "in": "query",
            "description": "To fetch devices based on whether they are connected to primary BN. Example: true",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "primaryBnSerialNumber",
            "in": "query",
            "description": "To fetch devices connected to a given primary BN serial number. It is required when connectedToPrimaryBn is true. Example: true",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/users/{email}": {
      "get": {
        "operationId": "getUserDetails",
        "summary": "Get a user details",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email id of the user. Example: johnk@taranawireless.com",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "Delete a user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email id of the user. Example: johnk@taranawireless.com",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateUserAttribute",
        "summary": "Update an user",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email id of the user. Example: johnk@taranawireless.com",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "default": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : firstName. Example: firstName",
            "required": false,
            "schema": {
              "type": "string",
              "default": "firstName",
              "enum": [
                "firstName",
                "lastName",
                "email",
                "mobile",
                "lastLoginTimeMillis",
                "creationTimeMillis",
                "operatorId",
                "retailerId",
                "userId",
                "roleName"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC. Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSearchUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSearchUserResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSearchUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSearchUserResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSearchUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "createUser",
        "summary": "Create a user",
        "tags": [
          "User"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundUserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/users/{email}/resend-signup-details": {
      "post": {
        "operationId": "resendSignupDetails",
        "summary": "Resend sign up details.",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email id of the user. Example: johnk@taranawireless.com",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/retailers": {
      "get": {
        "operationId": "getRetailers",
        "summary": "Get all retailers",
        "tags": [
          "Retailer"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Number of Rows after which records will be fetched. Possible values: 0 or higher. Example: 0",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Example: 10",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "The field on which to sort the response data, it must be one of the allowed values. Default value is : id. Example: id",
            "required": false,
            "schema": {
              "type": "string",
              "default": "id",
              "enum": [
                "id",
                "name",
                "operatorId"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC. Example: ASC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerListResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerListResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerListResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerListResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerListResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "operationId": "addRetailer",
        "summary": "Add a new retailer",
        "tags": [
          "Retailer"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewRetailer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/retailers/{retailerName}": {
      "get": {
        "operationId": "getRetailerDetails",
        "summary": "Get retailer details",
        "tags": [
          "Retailer"
        ],
        "parameters": [
          {
            "name": "retailerName",
            "in": "path",
            "description": "Retailer Name. Example: Retailer-2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "operationId": "updateRetailer",
        "summary": "Update an existing retailer ",
        "tags": [
          "Retailer"
        ],
        "parameters": [
          {
            "name": "retailerName",
            "in": "path",
            "description": "Retailer Name. Example: Retailer-2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailerUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteRetailer",
        "summary": "Delete a retailer",
        "tags": [
          "Retailer"
        ],
        "parameters": [
          {
            "name": "retailerName",
            "in": "path",
            "description": "Retailer Name. Example: Retailer-2",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailerDetailsResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/config/id/{operationId}": {
      "get": {
        "operationId": "getConfigOperationStatus",
        "summary": "Get Device Config operation status",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigOperationStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigOperationStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigOperationStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigOperationStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceConfigOperationStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/speed-test/get-baseline": {
      "post": {
        "operationId": "getSpeedTestBaselineResult",
        "summary": "Get speed test baseline result.",
        "tags": [
          "Diagnostics"
        ],
        "parameters": [
          {
            "name": "serialNumber",
            "description": "Serial number of the device",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Baseline result for an rn.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/reboot/id/{operationId}": {
      "get": {
        "operationId": "getRebootOperationStatus",
        "summary": "Get Device Reboot operation status",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootOperationStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootOperationStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootOperationStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootOperationStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootOperationStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/upgrade/id/{operationId}": {
      "get": {
        "operationId": "getUpgradeOperationStatus",
        "summary": "Get Device Upgrade operation status",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeOperationStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeOperationStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeOperationStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeOperationStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeOperationStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/snapshot/id/{operationId}": {
      "get": {
        "operationId": "getSnapshotOperationStatus",
        "summary": "Get Device Snapshot operation status",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSnapshotOperationStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSnapshotOperationStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSnapshotOperationStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSnapshotOperationStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSnapshotOperationStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/reboot/batch/{batchId}": {
      "get": {
        "operationId": "getRebootBatchOperationStatus",
        "summary": "Get Device Reboot operation status",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "batchId",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootBatchOperationsStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootBatchOperationsStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootBatchOperationsStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootBatchOperationsStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceRebootBatchOperationsStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/upgrade/batch/{batchId}": {
      "get": {
        "operationId": "getUpgradeBatchOperationStatus",
        "summary": "Get device upgrade batch operation status",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "batchId",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeBatchOperationsStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeBatchOperationsStatusResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeBatchOperationsStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeBatchOperationsStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUpgradeBatchOperationsStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/ping/id/{operationId}/stop": {
      "post": {
        "operationId": "stopPingTest",
        "tags": [
          "Diagnostics"
        ],
        "summary": "Stop ping test",
        "parameters": [
          {
            "name": "operationId",
            "description": "Device ping test operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopPingTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPingTestResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPingTestResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPingTestResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPingTestResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPingTestResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/ping/id/{operationId}": {
      "get": {
        "operationId": "getPingTestResult",
        "summary": "Get ping test result",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "description": "Device ping test operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPingTestResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPingTestResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPingTestResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPingTestResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPingTestResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/traceroute/id/{operationId}/stop": {
      "post": {
        "operationId": "stopTracerouteTest",
        "tags": [
          "Diagnostics"
        ],
        "summary": "Stop traceroute test",
        "parameters": [
          {
            "name": "operationId",
            "description": "Traceroute test operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StopTracerouteTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopTracerouteTestResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopTracerouteTestResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopTracerouteTestResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopTracerouteTestResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopTracerouteTestResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/switch-software-bank": {
      "put": {
        "operationId": "switchSoftwareBank",
        "summary": "Switch software Bank",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchBootBankRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "202 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSwitchBootBankResponse"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSwitchBootBankResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSwitchBootBankResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSwitchBootBankResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSwitchBootBankResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSwitchBootBankResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/traceroute/id/{operationId}": {
      "get": {
        "operationId": "getTracerouteTestResult",
        "summary": "Get traceroute test result",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "description": "Traceroute test operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTracerouteTestResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTracerouteTestResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTracerouteTestResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTracerouteTestResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTracerouteTestResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/speed-test/id/{operationId}/stop": {
      "post": {
        "operationId": "stopSpeedTest",
        "tags": [
          "Diagnostics"
        ],
        "summary": "Stop speed test",
        "parameters": [
          {
            "name": "operationId",
            "description": "Speed test operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopSpeedTestResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopSpeedTestResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopSpeedTestResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopSpeedTestResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopSpeedTestResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/operations/speed-test/id/{operationId}": {
      "get": {
        "operationId": "getSpeedTestResults",
        "summary": "Get speed test results",
        "tags": [
          "Device Config & Operations"
        ],
        "parameters": [
          {
            "name": "operationId",
            "description": "Speed test operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serialNumber",
            "description": "Serial number of the device. Example: S111F1202200226",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NorthboundSpeedTestResultResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/alarms": {
      "get": {
        "operationId": "getAlarmDetailsByDeviceSerialNumber",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Get alarm details for a specific device serial number",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "description": "Serial number of the device. Example: S111F1202200226",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the alarms, Default values will fetch alarms with status ACK and NACK",
            "schema": {
              "type": "string",
              "enum": [
                "ACK",
                "NACK"
              ]
            }
          },
          {
            "name": "severity",
            "in": "query",
            "description": "The severity of the alarms, Default value will fetch alarms for all severity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INDETERMINATE",
                  "WARNING",
                  "MINOR",
                  "MAJOR",
                  "CRITICAL"
                ]
              }
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "The source of the alarms, Default value will fetch alarms for all source",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "TCS",
                  "RN",
                  "BN"
                ]
              }
            }
          },
          {
            "name": "type-id",
            "in": "query",
            "description": "The type of alarms, Default value will fetch alarms for all alarm types",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "OTHER",
                  "COMMUNICATION",
                  "QOS",
                  "PROCESSING_ERROR",
                  "EQUIPMENT",
                  "ENVIRONMENTAL",
                  "INTEGRITY",
                  "OPERATIONAL",
                  "PHYSICAL",
                  "SECURITY",
                  "TIME_DOMAIN"
                ]
              }
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of records per request. Possible values: 1 or higher. Default value is 10",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "This field will be used to sort the response data, it must be one of the allowed values. Default value is : time-created",
            "schema": {
              "type": "string",
              "enum": [
                "time-created",
                "severity",
                "source",
                "type-id",
                "status"
              ],
              "default": "time-created"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "To order response data, either in ascending (ASC) or descending (DESC). Default value is : ASC",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmDetailsResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmDetailsResponse"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlarmDetailsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/alarms/acknowledge": {
      "post": {
        "operationId": "acknowledgeAlarmStatus",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Update alarm status to acknowledge",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "description": "Serial number of the device. Example: S111F1202200226",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmStatusUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "207": {
            "description": "207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/v1/network/radios/{serialNumber}/alarms/unacknowledge": {
      "post": {
        "operationId": "unacknowledgeAlarmStatus",
        "tags": [
          "Device Config & Operations"
        ],
        "summary": "Update alarm status to unacknowledge",
        "parameters": [
          {
            "name": "serialNumber",
            "in": "path",
            "required": true,
            "description": "Serial number of the device. Example: S111F1202200226",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlarmStatusUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "207": {
            "description": "207 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          },
          "500": {
            "description": "500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkDataResponseEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BooleanResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "PaginatedResponseEntityNorthBoundDeviceDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NorthBoundDeviceDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SearchDeviceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityNorthBoundDeviceDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "IdentificationIntegerString": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchDeviceRequest": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "$ref": "#/components/schemas/SearchDeviceFilterRequest"
          }
        }
      },
      "MODELb0ff8d": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {}
        }
      },
      "NetworkHierarchy": {
        "type": "object",
        "properties": {
          "sector": {
            "$ref": "#/components/schemas/IdentificationIntegerString"
          },
          "cell": {
            "$ref": "#/components/schemas/IdentificationIntegerString"
          },
          "site": {
            "$ref": "#/components/schemas/IdentificationIntegerString"
          },
          "market": {
            "$ref": "#/components/schemas/IdentificationIntegerString"
          },
          "region": {
            "$ref": "#/components/schemas/IdentificationIntegerString"
          },
          "operator": {
            "$ref": "#/components/schemas/IdentificationIntegerString"
          }
        }
      },
      "SearchDeviceFilterRequest": {
        "type": "object",
        "properties": {
          "regionName": {
            "type": "string"
          },
          "marketName": {
            "type": "string"
          },
          "siteName": {
            "type": "string"
          },
          "cellName": {
            "type": "string"
          },
          "sectorName": {
            "type": "string"
          },
          "deviceType": {
            "type": "string"
          },
          "isConnected": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "MODELfbe9db": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "CustomAttributeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceConfigResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthBoundDeviceDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthBoundDeviceDetails": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Serial Number of the Device"
          },
          "slaProfile": {
            "type": "string",
            "description": "Description: List of SLA profiles supported by the operator."
          },
          "hostName": {
            "type": "string",
            "description": "The hostname of the device."
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude of location of RN/BN device installed, in degrees."
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude of location of RN/BN device installed, in degrees."
          },
          "dataVlan": {
            "type": "integer",
            "format": "int32",
            "description": "VLAN that is configured to carry user-generated traffic."
          },
          "primaryBn": {
            "type": "string",
            "description": "To fetch response based on primary BN serial number. It is required if connectedToPrimaryBn is true."
          },
          "connectedBn": {
            "type": "string",
            "description": "The BN, where the RN is currently connected."
          },
          "retailerId": {
            "type": "integer",
            "format": "int32",
            "description": "Retailer Id"
          },
          "retailerName": {
            "type": "string",
            "description": "Retailer Name"
          },
          "hierarchy": {
            "description": "Describes the hierarchy of the network, the device belongs to. It tells about the sector, cell, site, market and region of the operator, the device belongs to.",
            "$ref": "#/components/schemas/NetworkHierarchy"
          },
          "macAddress": {
            "type": "string",
            "description": "MAC address of the Device."
          },
          "partNumber": {
            "type": "string",
            "description": "System assigned part number of the component. This should be present in particular if the component is also an FRU (field replaceable unit)."
          },
          "softwareVersion": {
            "type": "string",
            "description": "Version of software currently running on the device."
          },
          "firstSeenTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes the time in seconds, when the device became active for first time. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
          },
          "cpiId": {
            "type": "string",
            "description": "Id of the Certified Professional Installer of this radio."
          },
          "heightAgl": {
            "type": "number",
            "format": "double",
            "description": "Height of device installed above ground level (AGL), in meters."
          },
          "tilt": {
            "type": "number",
            "format": "double",
            "description": "Tilt of the front face of RN/BN device, in degrees."
          },
          "antennaAzimuth": {
            "type": "number",
            "format": "double",
            "description": "Azimuth of RN/BN device, in degrees."
          },
          "notes": {
            "type": "string",
            "description": "Description about the device."
          },
          "customAttributes": {
            "type": "object",
            "description": "Custom attributes which are set for the device.",
            "additionalProperties": {
              "type": "object"
            }
          },
          "activeBank": {
            "type": "string",
            "example": "system2",
            "description": "Uboot saved system software flash bank. Valid values are: system1, system2, factory."
          },
          "currentBank": {
            "type": "string",
            "example": "system2",
            "description": "Current booted system software flash bank. This could be different from active-bank when a user explicitly changes on Uboot console or other means without saving to flash. Valid values are: system1, system2, factory"
          },
          "connected": {
            "type": "boolean",
            "example": true,
            "description": "It denotes whether the device is connected to the Tarana cloud or not."
          },
          "managementIp": {
            "type": "string",
            "example": "172.16.1.1",
            "description": "The management IP address of a device."
          },
          "managementVlan": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Inband management VLAN ID."
          },
          "airInterfaceVersion": {
            "type": "integer",
            "format": "int32",
            "example": 0,
            "description": "Air Interface Protocol"
          },
          "multiCarrierModeBn": {
            "type": "string",
            "example": "dual",
            "description": "Carrier mode of the sector. Allowed values are dual, quad."
          },
          "multiCarrierModeRn": {
            "type": "string",
            "example": "dual",
            "description": "Carrier mode of the sector. Allowed values are dual, quad."
          },
          "services": {
            "type": "object",
            "description": "Device services",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "NorthboundDeleteDevicesRequest": {
        "type": "object",
        "properties": {
          "serialNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BulkDataResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BulkDataItemsListEntity"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "BulkDataItemsListEntity": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkDataResponse"
            }
          }
        }
      },
      "BulkDataResponse": {
        "type": "object",
        "properties": {
          "request": {
            "type": "object"
          },
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "StringResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "BulkUpdateDeviceConfig": {
        "type": "object",
        "properties": {
          "northboundDeviceConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NorthboundDeviceConfig"
            }
          }
        }
      },
      "NorthboundDeviceConfig": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string"
          },
          "deviceConfigUpdate": {
            "$ref": "#/components/schemas/DeviceConfigUpdate"
          }
        }
      },
      "NorthboundSpecialTelemetryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SpecialTelemetryModeOperation"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SpecialTelemetryModeOperation": {
        "type": "object",
        "properties": {
          "timeLeftSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "Special telemetry operation time left in seconds"
          }
        }
      },
      "DeviceConfigUpdate": {
        "type": "object",
        "properties": {
          "slaProfile": {
            "type": "string",
            "description": "SLA profiles supported by the operator."
          },
          "hostName": {
            "type": "string",
            "description": "The hostname of the device."
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude of the device."
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude of the device."
          },
          "dataVlan": {
            "type": "integer",
            "format": "int32",
            "description": "VLAN that is configured to carry user-generated traffic. To set the VLAN to its default, we need to pass '0'"
          },
          "primaryBn": {
            "type": "string",
            "description": "To fetch response based on primary BN serial number. It is required if connectedToPrimaryBn is true."
          },
          "retailerId": {
            "type": "integer",
            "format": "int32",
            "description": "Retailer Id"
          },
          "retailerName": {
            "type": "string",
            "description": "Retailer Name"
          },
          "heightAgl": {
            "type": "number",
            "format": "double",
            "description": "Height of device installed above ground level (AGL), in meters."
          },
          "tilt": {
            "type": "number",
            "format": "double",
            "description": "Tilt of the front face of RN/BN device, in degrees."
          },
          "antennaAzimuth": {
            "type": "number",
            "format": "double",
            "description": "Azimuth of RN/BN device, in degrees."
          },
          "cpiId": {
            "type": "string",
            "description": "Id of the Certified Professional Installer of this radio."
          },
          "notes": {
            "type": "string",
            "description": "To add a description about device configuration update."
          },
          "airInterfaceVersion": {
            "type": "integer",
            "format": "int32",
            "example": 0,
            "description": "Version of TRRC protocol"
          },
          "multiCarrierModeRn": {
            "type": "string",
            "example": "dual",
            "description": "Carrier mode of the sector. Allowed values are dual, quad."
          },
          "customAttributes": {
            "type": "object",
            "description": "Device specific custom attribute.",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DeviceConfigUpdateResponse": {
        "type": "object",
        "properties": {
          "slaProfile": {
            "type": "string",
            "description": "SLA profiles supported by the operator."
          },
          "hostName": {
            "type": "string",
            "description": "The hostname of the device."
          },
          "latitude": {
            "type": "string",
            "description": "Latitude of the device."
          },
          "longitude": {
            "type": "string",
            "description": "Longitude of the device."
          },
          "dataVlan": {
            "type": "string",
            "description": "VLAN that is configured to carry user-generated traffic."
          },
          "primaryBn": {
            "type": "string",
            "description": "To fetch response based on primary BN serial number. It is required if connectedToPrimaryBn is true."
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer Id"
          },
          "retailerName": {
            "type": "string",
            "description": "Retailer Name"
          },
          "heightAgl": {
            "type": "string",
            "description": "Height of device installed above ground level (AGL), in meters."
          },
          "tilt": {
            "type": "string",
            "description": "Tilt of the front face of RN/BN device, in degrees."
          },
          "antennaAzimuth": {
            "type": "string",
            "description": "Azimuth of RN/BN device, in degrees."
          },
          "cpiId": {
            "type": "string",
            "description": "Id of the Certified Professional Installer of this radio."
          },
          "notes": {
            "type": "string",
            "description": "To add a description about device configuration update."
          },
          "customAttribute1": {
            "type": "string",
            "description": "Device specific custom attribute."
          },
          "customAttribute2": {
            "type": "object",
            "description": "Device specific custom attribute."
          },
          "hierarchy": {
            "$ref": "#/components/schemas/NetworkHierarchy"
          },
          "macAddress": {
            "type": "string"
          },
          "softwareVersion": {
            "type": "string"
          },
          "firstSeenTimeSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "connectedBn": {
            "type": "string"
          }
        }
      },
      "BulkDeviceConfigResponse": {
        "type": "object",
        "properties": {
          "successList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceConfigResponseEntity"
            }
          },
          "failureList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceConfigResponseEntity"
            }
          }
        }
      },
      "DeviceConfigResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceConfig"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "BulkUpdateDeviceConfigResponse": {
        "type": "object",
        "properties": {
          "successList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringResponseEntity"
            }
          },
          "failureList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringResponseEntity"
            }
          }
        }
      },
      "BulkUpdateDeviceConfigRequest": {
        "type": "object",
        "properties": {
          "deviceConfigs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceConfig"
            }
          }
        }
      },
      "DeviceConfig": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DeviceConfigV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "ResetRadioRequest": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "ResetConnectionsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "RegionDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Region Id. Example: 1"
          },
          "name": {
            "type": "string",
            "description": "Region Name.Example: Alaska"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "description": "Operator Id. Example: 1"
          },
          "operatorName": {
            "type": "string",
            "description": "Operator Name. Example: Acme"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Network Profile. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description of the region. Example: This region belongs to operator Acme."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "regulatoryDomain": {
            "type": "string",
            "description": "Regulatory Domain of the region.Example: FCC",
            "enum": [
              "ETSI",
              "FCC",
              "ROW"
            ]
          },
          "regulatoryCountry": {
            "type": "string",
            "description": "Regulatory country of the region.Example: USA",
            "enum": [
              "MYS",
              "NGA",
              "USA",
              "ZAF"
            ]
          }
        },
        "description": "Region details response model."
      },
      "NorthboundRegionDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Region Id. Example: 1"
          },
          "name": {
            "type": "string",
            "example": "Alaska",
            "description": "Region Name"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "description": "Operator Id. Example: 1"
          },
          "operatorName": {
            "type": "string",
            "description": "Operator Name. Example: Acme"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Network Profile. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description of the region. Example: This region belongs to operator Acme."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "regulatoryDomain": {
            "type": "string",
            "description": "Regulatory Domain of the region.Example: FCC",
            "enum": [
              "FCC",
              "ROW"
            ]
          },
          "regulatoryCountry": {
            "type": "string",
            "description": "Regulatory country of the region.Example: USA",
            "enum": [
              "MYS",
              "NGA",
              "USA",
              "ZAF",
              "PHL"
            ]
          },
          "telemetryEnabled": {
            "type": "boolean",
            "description": "Description: Used to enable collector configuration. Allowed values are true and false. Example: true"
          },
          "telemetryOverrideEnabled": {
            "type": "boolean",
            "description": "Description: Used to enable override of collector configuration from operator Allowed values are true and false. Example: true"
          },
          "telemetryCollector": {
            "$ref": "#/components/schemas/NorthboundCollectorDetails"
          }
        },
        "description": "Region details response model."
      },
      "PaginatedResponseEntityNorthboundRegionDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NorthboundRegionDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "NorthboundRegionListResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityNorthboundRegionDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthboundRegionDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundRegionDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "JsonPatchOperatorRequest": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "Operation name in order to patch the region. Example: replace. Supported operations are: replace, remove, add."
          },
          "path": {
            "type": "string",
            "description": "Path name prefix with a forward slash, which corresponds to the actual attribute names. Example: /contactPerson."
          },
          "value": {
            "type": "object",
            "description": "The new value of given attribute."
          }
        },
        "description": "<p>The following table shows the supported and Not supported<code class=\"code\">op</code>operations for<code class=\"code\">Patch Operator</code>.</p><table border=\"1\"><tr><th>Path</th><th>op:add</th><th>op:replace</th><th>op:remove</th></tr><tr><td><p><code class=\"code\">/id</code></p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/name</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/notes</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/contactPerson</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/email</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/enableSupport</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/enableDebug</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/spectrumPolicy</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/primaryBnEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/autoReconnectToPrimaryBnEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/primaryBnSearchTimeoutSeconds</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/telemetryCollectorId</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/telemetryEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/softwareTags</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/timeZone</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr></table>"
      },
      "JsonPatchRegionRequest": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "Operation name in order to patch the region. Example: replace. Supported operations are: replace, remove, add."
          },
          "path": {
            "type": "string",
            "description": "Path name prefix with a forward slash, which corresponds to the actual attribute names. Example: /contactPerson."
          },
          "value": {
            "type": "object",
            "description": "The new value of given attribute."
          }
        },
        "description": "<p>The following table shows the supported and Not supported<code class=\"code\">op</code>operations for<code class=\"code\">Patch Region</code>.</p><table border=\"1\"><tr><th>Path</th><th>op:add</th><th>op:replace</th><th>op:remove</th></tr><tr><td><p><code class=\"code\">/id</code></p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/name</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/notes</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/contactPerson</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/email</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/regulatoryDomain</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/regulatoryCountry</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/telemetryCollectorId</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/telemetryEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/telemetryOverrideEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr></table>"
      },
      "JsonPatchMarketRequest": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "Operation name in order to patch the region. Example: replace. Supported operations are: replace, remove, add."
          },
          "path": {
            "type": "string",
            "description": "Path name prefix with a forward slash, which corresponds to the actual attribute names. Example: /contactPerson."
          },
          "value": {
            "type": "object",
            "description": "The new value of given attribute."
          }
        },
        "description": "<p>The following table shows the supported and unsupported<code class=\"code\">op</code>operations for<code class=\"code\">Patch Market</code>.</p><table border=\"1\"><tr><th>Path</th><th>op:add</th><th>op:replace</th><th>op:remove</th></tr><tr><td><p><code class=\"code\">/id</code></p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/networkProfile</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/name</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/notes</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/contactPerson</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/email</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr></table>"
      },
      "JsonPatchSiteRequest": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "Operation name in order to patch the region. Example: replace. Supported operations are: replace, remove, add."
          },
          "path": {
            "type": "string",
            "description": "Path name prefix with a forward slash, which corresponds to the actual attribute names. Example: /contactPerson."
          },
          "value": {
            "type": "object",
            "description": "The new value of given attribute."
          }
        },
        "description": "<p>The following table shows the supported and unsupported<code class=\"code\">op</code>operations for<code class=\"code\">Patch Site</code>.</p><table border=\"1\"><tr><th>Path</th><th>op:add</th><th>op:replace</th><th>op:remove</th></tr><tr><td><p><code class=\"code\">/id</code></p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/name</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/notes</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/contactPerson</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/email</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/address</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/latitude</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/longitude</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr></table>"
      },
      "JsonPatchCellRequest": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "Operation name in order to patch the region. Example: replace. Supported operations are:  replace, remove, add."
          },
          "path": {
            "type": "string",
            "description": "Path name prefix with a forward slash, which corresponds to the actual attribute names. Example: /contactPerson."
          },
          "value": {
            "type": "object",
            "description": "The new value of given attribute."
          }
        },
        "description": "<p>The following table shows the supported and unsupported<code class=\"code\">op</code>operations for<code class=\"code\">Patch Cell</code>.</p><table border=\"1\"><tr><th>Path</th><th>op:add</th><th>op:replace</th><th>op:remove</th></tr><tr><td><p><code class=\"code\">/id</code></p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/name</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/networkId</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not Supported</p></td></tr><tr><td><p><code class=\"code\">/radioSetId</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not Supported</p></td></tr><tr><td><p><code class=\"code\">/notes</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/networkProfile</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/frameOffsetMicroseconds</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/managedSpectrumEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not Supported</p></td></tr></table>"
      },
      "JsonPatchSectorRequest": {
        "type": "object",
        "required": [
          "op",
          "path"
        ],
        "properties": {
          "op": {
            "type": "string",
            "description": "Operation name in order to patch the region. Example: replace. Supported operations are:  replace, remove, add."
          },
          "path": {
            "type": "string",
            "description": "Path name prefix with a forward slash, which corresponds to the actual attribute names. Example: /contactPerson."
          },
          "value": {
            "type": "object",
            "description": "The new value of given attribute."
          }
        },
        "description": "<p>The following table shows the supported and Not supported<code class=\"code\">op</code>operations for<code class=\"code\">Patch Sector</code>.</p><table border=\"1\"><tr><th>Path</th><th>op:add</th><th>op:replace</th><th>op:remove</th></tr><tr><td><p><code class=\"code\">/id</code></p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/name</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not supported</p></td></tr><tr><td><p><code class=\"code\">/notes</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/slaClassificationType</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not Supported</p></td></tr><tr><td><p><code class=\"code\">/multiCarrierModeBn</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/carriers</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/rnTransmitPower</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/bnTransmitPower</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/primaryBnEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/autoReconnectToPrimaryBnEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/dhcpRelayAgentEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/circuitIdentifierType</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/primaryBnSearchTimeoutSeconds</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><tr><td><p><code class=\"code\">/telemetryEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/telemetryOverrideEnabled</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr><tr><td><p><code class=\"code\">/downstreamArp</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not Supported</p></td></tr><tr><td><p><code class=\"code\">/bufferAllocationProfile</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Not Supported</p></td></tr><tr><td><p><code class=\"code\">/clientVersion</code></p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td><td align=\"center\"><p>Supported</p></td></tr></table>"
      },
      "RegionUpdate": {
        "type": "object",
        "required": [
          "name",
          "regulatoryCountry",
          "regulatoryDomain"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Alaska"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: NetworkProfile value to be updated. It must be one of the allowed values. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the region. Maximum allowed length is 65535 characters. Example: This region belongs to operator Acme."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "regulatoryDomain": {
            "type": "string",
            "description": "Description: It must be one of the allowed values. Example: FCC",
            "enum": [
              "FCC",
              "ROW"
            ]
          },
          "regulatoryCountry": {
            "type": "string",
            "description": "Description: It must be one of the allowed values. Example: USA",
            "enum": [
              "MYS",
              "NGA",
              "USA",
              "ZAF"
            ]
          },
          "telemetryCollectorId": {
            "type": "string",
            "example": "ebe09460-ca9c-4e25-8a0e-86c75ed82b97",
            "description": "Telemetry Collector id."
          },
          "telemetryEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable collector configuration. Allowed values are true and false"
          },
          "telemetryOverrideEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable override of collector configuration from operator Allowed values are true and false"
          }
        },
        "description": "Model to update an existing region, Note: The fields marked with * are mandatory."
      },
      "NewRegion": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Alaska"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: It must be one of the allowed values. If provided null, default value(1) will be assigned. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the region. Maximum allowed length is 65535 characters. Example: This region belongs to operator Acme."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "regulatoryDomain": {
            "type": "string",
            "description": "Description: It must be one of the allowed values. Default value is FCC, if not provided. Example: FCC",
            "enum": [
              "FCC",
              "ROW"
            ]
          },
          "regulatoryCountry": {
            "type": "string",
            "description": "Description: It must be one of the allowed values. Default value is USA, if not provided. Example: USA",
            "enum": [
              "MYS",
              "NGA",
              "USA",
              "ZAF"
            ]
          }
        },
        "description": "Model to add a new region, Note: The fields marked with * are mandatory."
      },
      "MarketDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Market Id. Example: 1"
          },
          "name": {
            "type": "string",
            "description": "Market Name. Example: Juneau"
          },
          "regionId": {
            "type": "integer",
            "format": "int32",
            "description": "Region Id. Example: 1"
          },
          "regionName": {
            "type": "string",
            "description": "Region Name. Example: Alaska"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Network Profile. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description of the market. Example: This market belongs to region Alaska."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          }
        },
        "description": "Market details response model."
      },
      "MarketDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MarketDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "MarketUpdate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Juneau"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the market. Maximum allowed length is 65535 characters. Example: This market belongs to region: Alaska."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          }
        },
        "description": "Model to update an existing Market. Note: The fields marked with * are mandatory."
      },
      "NewMarket": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Juneau"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the market. Maximum allowed length is 65535 characters. Example: This market belongs to region: Alaska."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          }
        },
        "description": "Model to add new Market. Note: The fields marked with * are mandatory."
      },
      "PaginatedResponseEntityMarketDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MarketListResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityMarketDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SiteDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Site Id. Example: 1"
          },
          "name": {
            "type": "string",
            "description": "Site Name. Example: Nugget Mall Rooftop"
          },
          "marketId": {
            "type": "integer",
            "format": "int32",
            "description": "Market Id. Example: 1"
          },
          "marketName": {
            "type": "string",
            "description": "Market Name. Example: Juneau"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Network Profile. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description of the site. Example: This site belongs to market: Juneau."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "address": {
            "type": "string",
            "description": "Address of the site. Example: 8745 Glacier Hwy, Juneau, AK 99801, USA"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude of the Site. Example: 30.0"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude of the site. Example: 60.0"
          }
        },
        "description": "Site details response model."
      },
      "SiteDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SiteDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SiteUpdate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Nugget Mall Rooftop"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the site. Maximum allowed length is 65535 characters. Example: This site belongs to market: Juneau."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "address": {
            "type": "string",
            "description": "Description: Address of the site. Example: 8745 Glacier Hwy, Juneau, AK 99801, USA"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Description: Latitude of the Site. It must be between -90 and 90, Default value is 0.0. Example: 30.0"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Description: Longitude of the site. It must be between -180 and 180, Default value is 0.0. Example: 60.0"
          }
        },
        "description": "Model to update an existing Site. Note: The fields marked with * are mandatory."
      },
      "NewSite": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Nugget Mall Rooftop"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the site. Maximum allowed length is 65535 characters. Example: This site belongs to market: Juneau."
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "address": {
            "type": "string",
            "description": "Description: Address of the site. Example: 8745 Glacier Hwy, Juneau, AK 99801, USA"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Description: Latitude of the Site. It must be between -90 and 90, Default value is 0.0. Example: 30.0"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Description: Longitude of the site. It must be between -180 and 180, Default value is 0.0. Example: 60.0"
          }
        },
        "description": "Model to add a new Site. Note: The fields marked with * are mandatory."
      },
      "PaginatedResponseEntitySiteDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SiteListResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntitySiteDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "CellDetails": {
        "type": "object",
        "required": [
          "frameOffsetMicroseconds"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Cell Id. Example: 1"
          },
          "name": {
            "type": "string",
            "description": "Cell Name. Example: Cell-0"
          },
          "networkId": {
            "type": "integer",
            "format": "int32",
            "description": "Network Id of the Cell. Example: 1"
          },
          "siteId": {
            "type": "integer",
            "format": "int32",
            "description": "Site Id. Example: 1"
          },
          "siteName": {
            "type": "string",
            "description": "Site Name. Example: Nugget Mall Rooftop"
          },
          "radioSetId": {
            "type": "integer",
            "format": "int32",
            "description": "RadioSetId of the Cell. Example: 1"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Network Profile. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description of the cell"
          },
          "band": {
            "type": "string",
            "description": "Description: It must be one of the allowed values. Default value is 5ghz. Example: 5ghz",
            "enum": [
              "3ghz",
              "5ghz",
              "6ghz",
              "multi"
            ]
          },
          "isCbrsCell": {
            "type": "boolean",
            "description": "It indicates whether a cell is using CBRS spectrum. It is true only if the cell has band: 3ghz, country: USA and regulatory domain: FCC. Allowed values are true and false. Example: true"
          },
          "frameOffsetMicroseconds": {
            "type": "integer",
            "format": "int32",
            "example": 1000,
            "description": "Frame offset for all the 3GHz sectors in the cell. Used for aligning with LTE devices operating in the same band"
          },
          "usesDynamicSpectrum": {
            "type": "boolean",
            "example": true,
            "description": "Tells whether the cells uses dynamic spectrum or not. If false, carriers have to be configured manually at the sector level."
          },
          "managedSpectrumEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Whether the cell supports managed spectrum"
          }
        },
        "description": "Cell details response model."
      },
      "CellDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CellDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "CellUpdate": {
        "type": "object",
        "required": [
          "frameOffsetMicroseconds",
          "managedSpectrumEnabled",
          "name",
          "networkId",
          "radioSetId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Cell-0"
          },
          "networkId": {
            "type": "integer",
            "format": "int32",
            "description": "Description: It must be between 0 and 23, inclusive. It must be unique within the site scope. Example: 1"
          },
          "radioSetId": {
            "type": "integer",
            "format": "int32",
            "description": "Description: It must be 1 for the time being. Default value is 1. Example: 1"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the cell. Maximum allowed length is 65535 characters. Example: 1"
          },
          "band": {
            "type": "string",
            "description": "Description: This attribute no longer has edit support. This attribute will be ignored if it is discovered in the request payload.",
            "enum": [
              "3ghz",
              "5ghz",
              "6ghz",
              "multi"
            ]
          },
          "frameOffsetMicroseconds": {
            "type": "integer",
            "format": "int32",
            "example": 1000,
            "description": "Frame offset for all the 3GHz sectors in the cell. Used for aligning with LTE devices operating in the same band"
          },
          "managedSpectrumEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Whether the cell supports managed spectrum"
          }
        },
        "description": "Model to update an existing Cell. Note: The fields marked with * are mandatory."
      },
      "NewCell": {
        "type": "object",
        "required": [
          "networkId",
          "frameOffsetMicroseconds"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$ If not provided, service will provide default name with the help of networkId. eg: Cell-networkId. Example: Cell-0"
          },
          "networkId": {
            "type": "integer",
            "format": "int32",
            "description": "Description: It must be between 0 and 23, inclusive. It must be unique within the site scope. Example: 1"
          },
          "radioSetId": {
            "type": "integer",
            "format": "int32",
            "description": "Description: It must be 1 for the time being. Default value is 1. Example: 1"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the cell. Maximum allowed length is 65535 characters. Example: This cell belongs to site Nugget Mall Rooftop"
          },
          "band": {
            "type": "string",
            "description": "Description: It must be one of the allowed values. Default value is 5ghz. Example: 5ghz",
            "enum": [
              "3ghz",
              "5ghz",
              "6ghz",
              "multi"
            ]
          },
          "frameOffsetMicroseconds": {
            "type": "integer",
            "format": "int32",
            "example": 1000,
            "description": "Frame offset for all the 3GHz sectors in the cell. Used for aligning with LTE devices operating in the same band"
          },
          "managedSpectrumEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Whether the cell supports managed spectrum"
          }
        },
        "description": "Model to add a new Cell. Note: The fields marked with * are mandatory."
      },
      "PaginatedResponseEntityCellDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CellDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CellListResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityCellDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthboundSectorDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Sector Id. Example: 1"
          },
          "name": {
            "type": "string",
            "description": "Sector Name. Example: Sector-2"
          },
          "networkId": {
            "type": "integer",
            "format": "int32",
            "description": "Network Id of the sector. Example: 1"
          },
          "cellId": {
            "type": "integer",
            "format": "int32",
            "description": "Cell Id. Example: 1"
          },
          "cellName": {
            "type": "string",
            "description": "Cell Name.  Example: Cell-0"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Network Profile. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description of the sector. Example: This sector belongs to cell Cell-0"
          },
          "svLan": {
            "type": "string",
            "description": "Description: VLAN used for subscriber traffic as it exits out of 10 GigE or 1 GigE interface. Example: 1"
          },
          "slaClassificationType": {
            "type": "string",
            "description": "Type of classification applied for data traffic. Example: DSCP",
            "enum": [
              "DSCP",
              "CoS-inner"
            ]
          },
          "carrier1": {
            "$ref": "#/components/schemas/Carrier"
          },
          "carrier2": {
            "$ref": "#/components/schemas/Carrier"
          },
          "multiCarrierModeBn": {
            "type": "string",
            "example": "dual",
            "description": "Carrier mode of the sector. Allowed values are dual, quad."
          },
          "carriers": {
            "type": "object",
            "description": "Carrier details for this radio.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Carrier"
            }
          },
          "rnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Transmission power of the radio(in dBm). Example: 20.0"
          },
          "bnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Transmission power of the radio(in dBm). Example: 20.0"
          },
          "primaryBnEnabled": {
            "type": "boolean",
            "description": "It denotes whether instant auto connect to primary BN is enabled. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "autoReconnectToPrimaryBnEnabled": {
            "type": "boolean",
            "description": "To enable instant auto connect to primary BN. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "primaryBnSearchTimeoutSeconds": {
            "type": "integer",
            "format": "int32",
            "description": "Time configured for RN to stay silent when BN goes offline for a brief time. Example: 3000"
          },
          "dhcpRelayAgentEnabled": {
            "type": "boolean",
            "description": "It denotes whether dhcpRelayAgent is enabled. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "circuitIdentifierType": {
            "type": "string",
            "description": "Circuit identifier type configured. Used when dhcpRelayAgent is enabled. Example: SERIAL_NUMBER",
            "enum": [
              "MAC_ADDRESS",
              "SERIAL_NUMBER"
            ]
          },
          "telemetryEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable collector configuration. Allowed values are true and false"
          },
          "telemetryOverrideEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable override of collector configuration from operator Allowed values are true and false"
          },
          "telemetryCollector": {
            "$ref": "#/components/schemas/NorthboundCollectorDetails"
          },
          "downstreamArp": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Description: Used to configure Downstream ARP.1: Disabled, 2: Enabled"
          },
          "bufferAllocationProfile": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Controls buffer allocation method of the data traffic for all RNs in the sector. Default (1): Use standard buffer sizes, Maximum Size (2): Use maximum size buffers for maximizing data rates."
          }
        },
        "description": "Sector details response model."
      },
      "SectorDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundSectorDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SectorUpdate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Sector-2"
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the sector. Maximum allowed length is 65535 characters. Example: This sector belongs to cell Cell-0"
          },
          "slaClassificationType": {
            "type": "string",
            "description": "Description: Type of classification to be applied for data traffic. It must be one of the allowed values. Default value is CoS-inner, if not provided. Example: DSCP",
            "enum": [
              "DSCP",
              "CoS-inner"
            ]
          },
          "carrier1": {
            "$ref": "#/components/schemas/Carrier"
          },
          "carrier2": {
            "$ref": "#/components/schemas/Carrier"
          },
          "multiCarrierModeBn": {
            "type": "string",
            "example": "dual",
            "description": "Carrier mode of the sector. Allowed values are dual, quad."
          },
          "carriers": {
            "type": "object",
            "description": "Carrier details for this radio.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Carrier"
            }
          },
          "rnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Description: Required for non-CBRS sector. Example: 20.0"
          },
          "bnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Description: Required for non-CBRS sector. Example: 20.0"
          },
          "primaryBnEnabled": {
            "type": "boolean",
            "description": "Description: Used to enable instant auto connect to primary Bn. Default is null. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "autoReconnectToPrimaryBnEnabled": {
            "type": "boolean",
            "description": "Description: Required when primaryBnEnabled is true. Used to enable instant auto connect to primary Bn. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "primaryBnSearchTimeoutSeconds": {
            "type": "integer",
            "description": "Description: A timer for RN to stay silent when BN goes offline for a brief time. Example: 3000"
          },
          "dhcpRelayAgentEnabled": {
            "type": "boolean",
            "description": "Description: Used to enhance the security while allocating IP addresses to devices behind RN. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "circuitIdentifierType": {
            "type": "string",
            "description": "Description: Required when dhcpRelayAgent is enabled, it must be one of the allowed values. If dhcpRelayAgent is not enabled, default value SERIAL_NUMBER will be set. Example: SERIAL_NUMBER",
            "enum": [
              "MAC_ADDRESS",
              "SERIAL_NUMBER"
            ]
          },
          "telemetryEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable collector configuration. Allowed values are true and false"
          },
          "telemetryOverrideEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable override of collector configuration from operator Allowed values are true and false"
          },
          "downstreamArp": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Description: Used to configure Downstream ARP.1: Disabled, 2: Enabled"
          },
          "bufferAllocationProfile": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Controls buffer allocation method of the data traffic for all RNs in the sector. Default (1): Use standard buffer sizes, Maximum Size (2): Use maximum size buffers for maximizing data rates."
          },
          "clientVersion": {
            "type": "string",
            "example": "2.0",
            "description": "Description: Used to differentiate between the per-carrier configuration and the carrier-map based configuration options. For 4-carrier configuration, it is mandatory to specify 2.0 as the value of this attribute. Here 1.0: Legacy carrier configuration method, 2.0: Carrier-map based configuration"
          }
        },
        "description": "Model to update an existing sector. Note: The fields marked with * are mandatory."
      },
      "NewSector": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Sector-2",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: 1"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Possible values are 1, 2, 5, 6. Example: 1",
            "enum": [
              1,
              2,
              5,
              6
            ]
          },
          "notes": {
            "type": "string",
            "description": "Description: To add a description about the sector. Maximum allowed length is 65535 characters.Example: This sector belongs to cell Cell-0"
          },
          "slaClassificationType": {
            "type": "string",
            "description": "Description: Type of classification to be applied for data traffic. It must be one of the allowed values. Default value is CoS-inner, if not provided. Example: DSCP",
            "enum": [
              "DSCP",
              "CoS-inner"
            ]
          },
          "carrier1": {
            "$ref": "#/components/schemas/Carrier"
          },
          "carrier2": {
            "$ref": "#/components/schemas/Carrier"
          },
          "multiCarrierModeBn": {
            "type": "string",
            "example": "dual",
            "description": "Carrier mode of the sector. Allowed values are dual, quad."
          },
          "carriers": {
            "type": "object",
            "description": "Carrier details for this radio.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Carrier"
            }
          },
          "rnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Description: Required for non-CBRS sector. Example: 20.0"
          },
          "bnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Description: Required for non-CBRS sector. Example: 20.0"
          },
          "primaryBnEnabled": {
            "type": "boolean",
            "description": "Description: Used to enable instant auto connect to primary Bn. Default is null. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "autoReconnectToPrimaryBnEnabled": {
            "type": "boolean",
            "description": "Description: Required when primaryBnEnabled is true. Used to enable instant auto connect to primary Bn. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "primaryBnSearchTimeoutSeconds": {
            "type": "integer",
            "description": "Description: A timer for RN to stay silent when BN goes offline for a brief time. Example: 3000"
          },
          "dhcpRelayAgentEnabled": {
            "type": "boolean",
            "description": "Description: Used to enhance the security while allocating IP addresses to devices behind RN. Example: true",
            "enum": [
              true,
              false
            ]
          },
          "circuitIdentifierType": {
            "type": "string",
            "description": "Description: Required when dhcpRelayAgent is enabled, it must be one of the allowed values. If dhcpRelayAgent is not enabled, default value SERIAL_NUMBER will be set. Example: SERIAL_NUMBER",
            "enum": [
              "MAC_ADDRESS",
              "SERIAL_NUMBER"
            ]
          },
          "telemetryEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable collector configuration. Allowed values are true and false"
          },
          "telemetryOverrideEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable override of collector configuration from operator Allowed values are true and false"
          },
          "downstreamArp": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Description: Used to configure Downstream ARP.1: Disabled, 2: Enabled"
          },
          "bufferAllocationProfile": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Controls buffer allocation method of the data traffic for all RNs in the sector. Default (1): Use standard buffer sizes, Maximum Size (2): Use maximum size buffers for maximizing data rates."
          },
          "clientVersion": {
            "type": "string",
            "example": "2.0",
            "description": "Description: Used to differentiate between the per-carrier configuration and the carrier-map based configuration options. For 4-carrier configuration, it is mandatory to specify 2.0 as the value of this attribute. Here 1.0: Legacy carrier configuration method, 2.0: Carrier-map based configuration"
          }
        },
        "description": "Model to add a new sector. Note: The fields marked with * are mandatory."
      },
      "PaginatedResponseEntitySectorDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NorthboundSectorDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SectorListResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntitySectorDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "Carrier": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "integer",
            "format": "int32",
            "example": 3550000,
            "description": "For CBRS sector it must be null, for non-CBRS, frequency must be specified and the unit for frequency must be in KHz."
          },
          "channelWidth": {
            "type": "integer",
            "format": "int32",
            "description": "For non-CBRS carriers, configured automatically by TCS, based on the selected frequency. For CBRS, it must be null."
          },
          "enabled": {
            "type": "boolean",
            "description": "Option to disable a carrier. Default is true. User can only disable Carrier 1 for 5GHz sectors. Example: false"
          },
          "carrierConfiguredBand": {
            "type": "integer",
            "format": "int32",
            "example": 3,
            "description": "Frequency band of the carrier. Allowed values are 1, 2, 3, 4 where 1 = CBRS, 2 = 5GHz (UNII-1/UNII-2/UNII-3), 3 = UNII-3 only, 4 = AFC (UNII-5/UNII-7)"
          },
          "txPower": {
            "type": "number",
            "format": "float",
            "example": 20,
            "description": "The downlink (BN) transmit power of the carrier in dBm. txPower is configurable for 5GHz sectors (when carrierConfiguredBand = 2)."
          },
          "txPowerRemoteMax": {
            "type": "number",
            "format": "float",
            "example": 20,
            "description": "The transmit power of the carrier in dBm."
          }
        },
        "description": "Used for non-CBRS sector, if not provided, it gets initialized with default channel. For CBRS sector, it is not required."
      },
      "UserOrphanDeviceUpdate": {
        "type": "object",
        "required": [
          "serialNumber"
        ],
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Description: Serial number of the device. Example: S111F1202200226"
          },
          "hostName": {
            "type": "string",
            "description": "Description: Hostname of the device. Example: S144T1212101212"
          },
          "muteMode": {
            "type": "boolean",
            "description": "Description: To mute the device. Example: true",
            "enum": [
              true,
              false
            ]
          }
        },
        "description": "Model to update an existing orphan device"
      },
      "DeviceDetails": {
        "type": "object",
        "required": [
          "frameOffsetMicroseconds"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Device Id. Example: S111F1202200226"
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial Number of the Device. Example: S111F1202200226"
          },
          "macAddress": {
            "type": "string",
            "description": "MAC address of the Device. Example: 08:F1:1E:09:12:34"
          },
          "type": {
            "type": "string",
            "description": "It denotes the type of the device, either RN or BN. Example: BN"
          },
          "sectorId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the sector to which the device belongs. Example: 1"
          },
          "retailerId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the retailer (group) to which the device belongs. Example: 1"
          },
          "retailerName": {
            "type": "string",
            "description": "Name of the retailer (group) to which the device belongs. Example: Retailer-2"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Version of software currently running on the device. Example: SYS.A3.B10.123"
          },
          "ip": {
            "type": "string",
            "description": "The IP address that the gRPC server listens on. This may be an IPv4 or an IPv6 address. Example: 172.16.1.1"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "TCP port on which the gRPC server listens on. Example: 8443"
          },
          "endpoints": {
            "description": "Model to store communication endpoint of the device",
            "$ref": "#/components/schemas/Endpoints"
          },
          "transportSecurity": {
            "type": "boolean",
            "description": "It denotes whether any gRPC transport security is enabled (e.g., TLS or SSL). Example: true"
          },
          "authenticated": {
            "type": "boolean",
            "description": "It denotes whether the device is authenticated or not. Example: true"
          },
          "insecureMode": {
            "type": "boolean",
            "description": "It denotes whether the device is publicly accessible without any VPN. Example: true"
          },
          "masterId": {
            "type": "string",
            "description": "Id of the BN device to which the current device (RN) is connected. Example: S111F1202200226"
          },
          "masterName": {
            "type": "string",
            "description": "Hostname of the BN device to which the current device (RN) is connected. Example: S111F1202200226"
          },
          "installParams": {
            "description": "Installation parameters of a device.",
            "$ref": "#/components/schemas/InstallParams"
          },
          "address": {
            "type": "string",
            "description": "Address where the device is installed. Example: 12 Bourbon Street, New York"
          },
          "bootTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes the time in seconds when the device was last restarted. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1677820613"
          },
          "uptimeSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes the time elapsed in seconds since last start / restart. Example: 174078"
          },
          "losRange": {
            "type": "number",
            "format": "float",
            "description": "It denotes line-of-sight distance between the RN and its BN in meters. Example: 1941.5"
          },
          "bootId": {
            "type": "string",
            "description": "Id generated at each boot. This will be used to uniquely identify each boot event. Example: 122758ce526177665d3ece2ac8975f87"
          },
          "lastUpdateTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes the time in seconds when last registration message was received from this device. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1677820613"
          },
          "connected": {
            "type": "boolean",
            "description": "It denotes whether the device is connected to the Tarana cloud or not. Example: true"
          },
          "reachable": {
            "type": "string",
            "description": "It denotes whether the device is reachable from the Tarana cloud or not. Example: true"
          },
          "linkState": {
            "type": "string",
            "description": "It denotes the state of the link between RN and its BN. Possible values are: connected, disconnected and unknown. Example: connected"
          },
          "partNumber": {
            "type": "string",
            "description": "System assigned part number of the component. This should be present in particular if the component is also an FRU (field replaceable unit). Example: 30-0120-001.1.0"
          },
          "loginBanner": {
            "type": "string",
            "description": "The console login message displayed before the login prompt, i.e. before a user logs into the system."
          },
          "activeBank": {
            "type": "string",
            "description": "Uboot saved system software flash bank. Valid values are: system1, system2, factory. Example: system2"
          },
          "currentBank": {
            "type": "string",
            "description": "Current booted system software flash bank. This could be different from active-bank when a user explicitly changes on Uboot console or other means without saving to flash. Valid values are: system1, system2, factory. Example: system2"
          },
          "bootReason": {
            "type": "string",
            "description": "Reason for the system boot recorded by Uboot. Valid values are: cold boot, warm boot, cpu-watchdog, system-watchdog, factory-button, short-button, long-button. Example: warm boot"
          },
          "rebootMessage": {
            "type": "string",
            "description": "Description of the system reboot reason. Example: USER_REBOOT:25:user"
          },
          "rfBoardSerialNumber": {
            "type": "string",
            "description": "System-assigned serial number of the RF board component. Example: R080F1194000028"
          },
          "rfBoardPartNumber": {
            "type": "string",
            "description": "System-assigned part number for the RF board component. This should be present in particular if the component is also an FRU (field replaceable unit). Example: 31-0080-301.3.1"
          },
          "digiBoardSerialNumber": {
            "type": "string",
            "description": "System-assigned serial number of the Digi board component. Example: R080F1194000028"
          },
          "digiBoardPartNumber": {
            "type": "string",
            "description": "System-assigned part number for the digi board component. This should be present in particular if the component is also an FRU (field replaceable unit). Example: 31-0080-301.3.1"
          },
          "ancestry": {
            "description": "Network hierarchy information of the device, including Sector, Cell, Site, Market, Region, Operator.",
            "$ref": "#/components/schemas/Ancestry"
          },
          "modelNumber": {
            "type": "string",
            "description": "Model number of the device. Example: 1"
          },
          "lastChangeReason": {
            "type": "string",
            "description": "The last status change reason for the device. Example: bn:radio-reset"
          },
          "lastChangeReasonMessage": {
            "type": "string",
            "description": "The last status change message for the device. Example: DisableCarrier for carrier_id: 0"
          },
          "softwareBanks": {
            "type": "array",
            "description": "List of software banks associated with a device.",
            "items": {
              "$ref": "#/components/schemas/SoftwareBank"
            }
          },
          "sectorName": {
            "type": "string",
            "description": "Sector Name. Example: Sector-2"
          },
          "isOrphan": {
            "type": "boolean",
            "description": "It denotes whether the device is an orphan device i.e. a device that is not yet associated with a sector. Example: true"
          },
          "configPushEnabled": {
            "type": "boolean",
            "description": "It denotes whether the TCS will push configuration to the device or not. Example: true"
          },
          "savedConfig": {
            "description": "Model used for Device configuration saved in NIS",
            "$ref": "#/components/schemas/SavedDeviceConfigDetails"
          },
          "configMismatch": {
            "type": "boolean",
            "description": "It denotes whether there is a configuration mismatch between saved and reported configurations. Example: true"
          },
          "radioOperatorId": {
            "type": "integer",
            "format": "int32",
            "description": "The operator id for this radio. Example: 1"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Description: Network Profile. Possible values are 1, 2, 5, 6. Example: 1"
          },
          "regulatoryDomain": {
            "type": "string",
            "description": "Regulatory Domain of the region. Allowed values are FCC, ROW. Example: FCC"
          },
          "regulatoryCountry": {
            "type": "string",
            "description": "Regulatory country of the region. Allowed values are MYS, NGA, USA, ZAF. Example: USA"
          },
          "radioSetId": {
            "type": "integer",
            "format": "int32",
            "description": "The set-id for this radio. Example: 1"
          },
          "radioCellId": {
            "type": "integer",
            "format": "int32",
            "description": "The cell-id for this radio. Example: 1"
          },
          "band": {
            "type": "string",
            "description": "Regulatory band of the radio device. Example: 3ghz"
          },
          "radioSectorId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the sector to which the device belongs. Example: 1"
          },
          "svLan": {
            "type": "string",
            "description": "VLAN used for subscriber traffic as it exits out of 10 GigE or 1 GigE interface. Example: 1"
          },
          "slaClassificationType": {
            "type": "string",
            "description": "Type of classification applied for data traffic. Allowed values are DSCP, CoS-inner. Example: DSCP"
          },
          "hostName": {
            "type": "string",
            "description": "The hostname of the device. Example: S111F1202200226"
          },
          "muteMode": {
            "type": "boolean",
            "description": "It denotes whether the radio transmission is enabled from the device. Example: true"
          },
          "managementSubnet": {
            "type": "string",
            "description": "Inband management IPv4/IPv6 address prefix. Example: 169.204.244.1"
          },
          "managementSubnetMask": {
            "type": "string",
            "description": "It is a 32-bit number created by setting host bits to all 0s and setting network bits to all 1s. Example: 22"
          },
          "carrier1": {
            "description": "Carrier details for this radio.",
            "$ref": "#/components/schemas/Carrier"
          },
          "carrier2": {
            "description": "Carrier details for this radio.",
            "$ref": "#/components/schemas/Carrier"
          },
          "slaProfile": {
            "type": "string",
            "description": "SLA Profile configured. Example: sla-5"
          },
          "dataVlan": {
            "type": "integer",
            "format": "int32",
            "description": "VLAN that is configured to carry user-generated traffic. Example: 1"
          },
          "managementVlan": {
            "type": "integer",
            "format": "int32",
            "description": "Inband management VLAN ID. Example: 1"
          },
          "cpiId": {
            "type": "string",
            "description": "Id of the Certified Professional Installer of this radio. Example: 1"
          },
          "notes": {
            "type": "string",
            "description": "Description about the device. Example: This device belongs to operator Acme."
          },
          "isCbrsDevice": {
            "type": "boolean",
            "description": "It denotes whether the device belongs to CBRS cell or not. Example: true"
          },
          "usesDynamicSpectrum": {
            "type": "boolean"
          },
          "grantStatus": {
            "type": "string",
            "description": "Current state of spectrum grant."
          },
          "firstSeenTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes the time in seconds, when the device became active for first time. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1677820613"
          },
          "updatedBy": {
            "type": "string",
            "description": "Updated by. Example: TOPOLOGY_SERVICE"
          },
          "customAttributes": {
            "type": "object",
            "description": "Custom attributes which are set for the device.",
            "additionalProperties": {
              "type": "object"
            }
          },
          "bnPriorityList": {
            "type": "array",
            "description": "List of Priority BNs configured for the device.",
            "items": {
              "$ref": "#/components/schemas/PriorityBn"
            }
          },
          "preferredBn": {
            "type": "string",
            "description": "Primary BN configured for the device. Example: S111F1202200226"
          },
          "previousPreferredBn": {
            "type": "string",
            "description": "Previously configured primary BN for the device. Example: S111F1202200226"
          },
          "lastDisconnectTimeNanos": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes the time in nanoseconds when the device was last disconnected i.e. when the last sync was sent to TCS before the disconnection. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1677827001485204000"
          },
          "downDurationMillis": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes device down duration since last-disconnect-time. Example: 1677820613"
          },
          "excludeDurationMillis": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes device downtime exclude duration since last-disconnect-time. Example: 1677820613"
          },
          "connectionUptimeSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes duration for which the connection is active. Example: 1677820613"
          },
          "version": {
            "type": "integer",
            "format": "int64",
            "description": "This field is used as a serialization version tracker for this class. Example: 1"
          },
          "frameOffsetMicroseconds": {
            "type": "integer",
            "format": "int32",
            "example": 1000,
            "description": "Frame offset for all the 3GHz sectors in the cell. Used for aligning with LTE devices operating in the same band"
          },
          "dhcpRelayAgentEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enhance the security while allocating IP addresses to devices behind RN. Allowed values are true and false"
          },
          "remoteIdentifierType": {
            "type": "string",
            "example": "08:F1:1E:09:12:34",
            "description": "An Identity having value either Serial number or the MAC address of the device , which will be used for BN identification."
          },
          "circuitIdentifierType": {
            "type": "string",
            "example": "SERIAL_NUMBER",
            "description": "Circuit identifier type configured for the device."
          },
          "warrantyStartSeconds": {
            "type": "integer",
            "format": "int64",
            "example": 1677820613,
            "description": "It denotes time in seconds when the device warranty has started. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
          },
          "warrantyExpirySeconds": {
            "type": "integer",
            "format": "int64",
            "example": 1677820613,
            "description": "It denotes time in seconds when the device warranty will expire. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
          },
          "preferredBnSearchTimeoutSeconds": {
            "type": "integer",
            "format": "int32",
            "example": 3000,
            "description": "Time configured for RN to stay silent when BN goes offline for a brief time"
          },
          "preferredBnResetTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "example": 1677820613,
            "description": "It denotes the time in seconds when primary BN of the device is reset to null. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
          },
          "lastConnectionTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "example": 1677820613,
            "description": "It denotes the time when device was last connected to BN in seconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
          },
          "telemetryCollector": {
            "$ref": "#/components/schemas/DeviceTelemetryCollectorDetails"
          },
          "radioOperationalStatus": {
            "type": "integer",
            "format": "int32",
            "description": "The current operational state of the radio."
          },
          "preferredBnEnabled": {
            "type": "boolean",
            "example": true,
            "description": "It denotes whether instant auto connect to primary BN is enabled. Allowed values are true and false"
          },
          "autoReconnectToPreferredBnEnabled": {
            "type": "boolean",
            "example": true,
            "description": "To enable instant auto connect to primary BN. Allowed values are true and false"
          },
          "rnTransmitPower": {
            "type": "number",
            "format": "float",
            "example": 20,
            "description": "Transmission power of the RN(in dBm)."
          },
          "bnTransmitPower": {
            "type": "number",
            "format": "float",
            "example": 20,
            "description": "Transmission power of the BN(in dBm)."
          },
          "slaProfiles": {
            "type": "array",
            "description": "Description: List of SLA profiles supported by the operator.",
            "items": {
              "$ref": "#/components/schemas/SlaProfile"
            }
          },
          "radioNetworkUp": {
            "type": "boolean",
            "example": true,
            "description": "It denotes whether the radio network is up for the device."
          },
          "cbrsDevice": {
            "type": "boolean"
          }
        },
        "description": "Device details response model."
      },
      "DeviceDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceListResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityDeviceDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "PaginatedResponseEntityDeviceDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InstallParams": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude of location of RN/BN device installed, in degrees. Example: 30.0"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude of location of RN/BN device installed, in degrees. Example: 60.0"
          },
          "height": {
            "type": "number",
            "format": "double",
            "description": "Height of device installed above mean sea level (AMSL), in meters. Example: 15.0"
          },
          "heightAgl": {
            "type": "number",
            "format": "double",
            "description": "Height of device installed above ground level (AGL), in meters. Example: 15.0"
          },
          "antennaDowntilt": {
            "type": "number",
            "format": "double",
            "description": "The angle between the horizon of the antenna and the center of the beam after the antenna has been tilted downwards (vertically). Example: 5.0"
          },
          "antennaAzimuth": {
            "type": "number",
            "format": "double",
            "description": "Azimuth of RN/BN device, in degrees. Example: 5.0"
          }
        },
        "description": "Installation parameters of a device."
      },
      "Ancestry": {
        "type": "object",
        "properties": {
          "sector": {
            "$ref": "#/components/schemas/IdentificationIntInt"
          },
          "sectorDetails": {
            "$ref": "#/components/schemas/NorthboundSectorDetails"
          },
          "cell": {
            "$ref": "#/components/schemas/IdentificationIntInt"
          },
          "cellDetails": {
            "$ref": "#/components/schemas/CellDetails"
          },
          "site": {
            "$ref": "#/components/schemas/SiteDetails"
          },
          "market": {
            "$ref": "#/components/schemas/MarketDetails"
          },
          "region": {
            "$ref": "#/components/schemas/RegionDetails"
          },
          "operator": {
            "$ref": "#/components/schemas/OperatorDetails"
          }
        }
      },
      "IdentificationIntInt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OperatorDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Operator Id. Example: 1"
          },
          "name": {
            "type": "string",
            "description": "Operator Name. Example: Acme"
          },
          "logo": {
            "description": "Encrypted logo image of the operator.",
            "$ref": "#/components/schemas/Image"
          },
          "radioOperatorId": {
            "type": "integer",
            "format": "int32",
            "description": "Operator Id for this radio. Example: 1"
          },
          "notes": {
            "type": "string",
            "description": "Description of the operator. Example: This operator is owned by Acme company"
          },
          "contactPerson": {
            "type": "string",
            "description": "Description: Name of the contact person. Example: John Kite"
          },
          "email": {
            "type": "string",
            "description": "Description: Email of the contact person. Example: johnKite@gmail.com"
          },
          "timeZone": {
            "type": "string",
            "description": "Timezone of the operator. It must be the valid timezone. Default value is UTC. Example: Pacific/Wallis"
          },
          "fccOrId": {
            "type": "string",
            "description": "fccOrId. Example: taranaFccId"
          },
          "spectrumPolicy": {
            "description": "Description: Spectrum policy of the operator. This field is required for Operators to be able to use the CBRS or 6GHz spectrum.",
            "$ref": "#/components/schemas/SpectrumPolicy"
          },
          "slaProfiles": {
            "type": "array",
            "description": "Description: List of SLA profiles supported by the operator.",
            "items": {
              "$ref": "#/components/schemas/SlaProfile"
            }
          },
          "sasProvider": {
            "type": "string",
            "description": "Name of the SAS provider. Example: Tarana"
          },
          "customAttributeName1": {
            "type": "string",
            "description": "Operator specific custom attributes. Example: uniqueId3"
          },
          "customAttributeName2": {
            "type": "string",
            "description": "Operator specific custom attributes. Example: uniqueId3"
          },
          "softwareTags": {
            "type": "array",
            "description": "Description: It represents the operator's access to available software packages. Example: Stable",
            "items": {
              "type": "string"
            }
          },
          "preferredBnEnabled": {
            "type": "boolean",
            "description": "If instant auto connect to primary BN is enabled. Example: true"
          },
          "telemetryEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable collector configuration. Allowed values are true and false"
          },
          "telemetryCollector": {
            "$ref": "#/components/schemas/NorthboundCollectorDetails"
          }
        },
        "description": "Operator details response model."
      },
      "SoftwareBank": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Bank name. Example: system2"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Software version of the bank. Example: SYS.A3.B10.123"
          }
        },
        "description": "Represents a software bank associated with a device."
      },
      "SavedDeviceConfigDetails": {
        "type": "object",
        "properties": {
          "radioOperatorId": {
            "type": "integer",
            "format": "int32",
            "description": "The operator id for this radio. Example: 1"
          },
          "networkProfile": {
            "type": "integer",
            "format": "int32",
            "description": "Network Profile. Allowed values are 1, 2, 5, 6. Example: 1"
          },
          "regulatoryDomain": {
            "type": "string",
            "description": "Regulatory Domain of the region. Allowed values are FCC, ROW. Example: FCC"
          },
          "regulatoryCountry": {
            "type": "string",
            "description": "Regulatory country of the region. Allowed values are MYS, NGA, USA, ZAF. Example: USA"
          },
          "radioSetId": {
            "type": "integer",
            "format": "int32",
            "description": "The set-id for this radio. Example: 1"
          },
          "radioCellId": {
            "type": "integer",
            "format": "int32",
            "description": "The cell-id for this radio. Example: 1"
          },
          "band": {
            "type": "string",
            "description": "Regulatory band of the radio device. Example: 3ghz"
          },
          "radioSectorId": {
            "type": "integer",
            "format": "int32",
            "description": "Id of the sector to which the device belongs. Example: 1"
          },
          "svLan": {
            "type": "string",
            "description": "VLAN used for subscriber traffic as it exits out of 10 GigE or 1 GigE interface. Example: 1"
          },
          "slaClassificationType": {
            "type": "string",
            "description": "Type of classification applied for data traffic. Allowed values are DSCP, CoS-inner. Example: DSCP"
          },
          "hostName": {
            "type": "string",
            "description": "The hostname of the device. Example: S111F1202200226"
          },
          "muteMode": {
            "type": "boolean",
            "description": "It denotes whether the radio transmission is enabled from the device. Example: true"
          },
          "managementSubnet": {
            "type": "string",
            "description": "Inband management IPv4/IPv6 address prefix. Example: 169.204.244.1"
          },
          "managementSubnetMask": {
            "type": "string",
            "description": "It is a 32-bit number created by setting host bits to all 0s and setting network bits to all 1s. Example: 22"
          },
          "carrier1": {
            "description": "Carrier details for this radio.",
            "$ref": "#/components/schemas/Carrier"
          },
          "carrier2": {
            "description": "Carrier details for this radio.",
            "$ref": "#/components/schemas/Carrier"
          },
          "slaProfile": {
            "type": "string",
            "description": "SLA Profile configured. Example: sla-5"
          },
          "slaProfiles": {
            "type": "array",
            "description": "Description: List of SLA profiles supported by the operator.",
            "items": {
              "$ref": "#/components/schemas/SlaProfile"
            }
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude of location of RN/BN device installed, in degrees. Example: 30.0"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude of location of RN/BN device installed, in degrees. Example: 60.0"
          },
          "antennaAzimuth": {
            "type": "number",
            "format": "double",
            "description": "Azimuth of RN/BN device, in degrees. Example: 5.0"
          },
          "dataVlan": {
            "type": "integer",
            "format": "int32",
            "description": "VLAN that is configured to carry user-generated traffic. Example: 1"
          },
          "rnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Transmission power of the RN(in dBm). Example: 20.0"
          },
          "bnTransmitPower": {
            "type": "number",
            "format": "float",
            "description": "Transmission power of the BN(in dBm). Example: 20.0"
          },
          "preferredBn": {
            "type": "string",
            "description": "Primary BN configured for the device. Example: S111F1202200226"
          },
          "preferredBnEnabled": {
            "type": "boolean",
            "description": "It denotes whether instant auto connect to primary BN is enabled. Allowed values are true and false. Example: true"
          },
          "frameOffsetMicroseconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Model used for Device configuration saved in NIS"
      },
      "SlaProfile": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "string",
            "description": "Sla profile Id. Example: sla-5"
          },
          "name": {
            "type": "string",
            "description": "Sla profile name. Example: SLA-5M"
          },
          "peakBurstSize": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of bytes that can be absorbed. Example: 16"
          },
          "peakRateMbps": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum data transferred rate. Example: 5"
          }
        },
        "description": "Description: List of SLA profiles supported by the operator."
      },
      "Endpoints": {
        "type": "object",
        "properties": {
          "grpc": {
            "description": "The grpc endpoint of the device",
            "$ref": "#/components/schemas/Endpoint"
          },
          "http": {
            "description": "The http endpoint of the device",
            "$ref": "#/components/schemas/Endpoint"
          },
          "web": {
            "description": "The web endpoint of the device.",
            "$ref": "#/components/schemas/Endpoint"
          },
          "ssh": {
            "description": "The ssh endpoint of the device",
            "$ref": "#/components/schemas/Endpoint"
          }
        },
        "description": "Model to stores multiple communication endpoints of the device"
      },
      "PriorityBn": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Serial Number of the BN. Example: S111F1202200226"
          },
          "preferredNetworkId": {
            "type": "string",
            "description": "Network Id of the Sector. Example: 1"
          },
          "connectedTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "description": "It denotes the time when device was last connected to BN in seconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1677820613"
          }
        },
        "description": "Priority BN details model."
      },
      "Endpoint": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "description": "IP address of the Endpoint. Example: 172.16.1.1"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "Port of the Endpoint. Example: 8443"
          }
        },
        "description": "Model to store communication endpoint of the device"
      },
      "Image": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "roleName": {
            "type": "string",
            "description": "Role name. Example: OP Admin"
          }
        },
        "description": "Details of role(s) assigned to the user"
      },
      "RetailerDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Retailer Id. Example: 1"
          },
          "name": {
            "type": "string",
            "description": "Retailer Name. Example: Retailer-2"
          },
          "operatorId": {
            "type": "integer",
            "format": "int32",
            "description": "Operator Id. Example: 1"
          },
          "operatorName": {
            "type": "string",
            "description": "Operator Name. Example: Acme"
          }
        },
        "description": "Retailer details response model."
      },
      "PaginatedResponseEntityRetailerDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailerDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RetailerListResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityRetailerDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "RetailerDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailerDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "RetailerUpdate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Retailer-2"
          }
        },
        "description": "Model to update an existing Retailer. Note: The fields marked with * are mandatory."
      },
      "NewRetailer": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Description: Name should not be null. Whitespace is not allowed at the beginning or at the end. Allowed length is between 2 and 64. Allowed pattern - ^[A-Za-z0-9]([a-zA-Z0-9]|[-_ .&])*$. Example: Retailer-2"
          }
        },
        "description": "Model to add a new Retailer. Note: The fields marked with * are mandatory."
      },
      "UpdateUser": {
        "type": "object",
        "required": [
          "assignedRoles",
          "email",
          "firstName",
          "lastName",
          "mobile",
          "retailerName"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name. Example: John"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name. Example: Kite"
          },
          "email": {
            "type": "string",
            "description": "User's email id. Example: johnk@taranawireless.com"
          },
          "mobile": {
            "type": "string",
            "description": "User's contact number. Supported formats are xxxxxxxxxx, xxx xxx xxxx, (xxx) xxx-xxxx, +xxx (xxx) xxx-xxxx, xxx xxx xxx, +xxx xxx xxx xxx, xxx xx xx xx, +xxx xxx xx xx xx. Example: 9999888822"
          },
          "address": {
            "type": "string",
            "description": "User's address. Example: 8745 Glacier Hwy, Juneau, AK 99801, USA"
          },
          "city": {
            "type": "string",
            "description": "City. Example: Juneau"
          },
          "state": {
            "type": "string",
            "description": "State. Example: Alaska"
          },
          "country": {
            "type": "string",
            "description": "Country. Example: USA"
          },
          "pincode": {
            "type": "string",
            "description": "Pincode. Example: 211201"
          },
          "retailerName": {
            "type": "string",
            "description": "Name of the retailer to which the user belongs. Example: Retailer-2"
          },
          "assignedRoles": {
            "type": "array",
            "description": "List of role(s) assigned to the user",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        },
        "description": "Model to update an existing user. Note: The fields marked with * are mandatory."
      },
      "NewUser": {
        "type": "object",
        "required": [
          "assignedRoles",
          "email",
          "firstName",
          "lastName",
          "mobile",
          "retailerName"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name. Example: John"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name. Example: Kite"
          },
          "email": {
            "type": "string",
            "description": "User's email id. Example: johnk@taranawireless.com"
          },
          "mobile": {
            "type": "string",
            "description": "User's contact number. Supported formats are xxxxxxxxxx, xxx xxx xxxx, (xxx) xxx-xxxx, +xxx (xxx) xxx-xxxx, xxx xxx xxx, +xxx xxx xxx xxx, xxx xx xx xx, +xxx xxx xx xx xx. Example: 9999888822"
          },
          "address": {
            "type": "string",
            "description": "User's address. Example: 8745 Glacier Hwy, Juneau, AK 99801, USA"
          },
          "city": {
            "type": "string",
            "description": "City. Example: Juneau"
          },
          "state": {
            "type": "string",
            "description": "State. Example: Alaska"
          },
          "country": {
            "type": "string",
            "description": "Country. Example: USA"
          },
          "pincode": {
            "type": "string",
            "description": "Pincode. Example: 211201"
          },
          "retailerName": {
            "type": "string",
            "description": "Name of the retailer to which the user belongs. Example: Retailer-2"
          },
          "assignedRoles": {
            "type": "array",
            "description": "List of role(s) assigned to the user",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        },
        "description": "Model to create a new user. Note: The fields marked with * are mandatory."
      },
      "StringResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "CreateSnapshotResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceSnapshotResponse"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceSnapshotResponse": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          }
        },
        "description": "Device snapshot response model"
      },
      "RebootDeviceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RebootOperation"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "RebootOperation": {
        "type": "object",
        "properties": {
          "opId": {
            "type": "string",
            "description": "Software install operation id. Example: f8da40f4-2d41-4d97-afd1-d82eacd5f7d1"
          },
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "deviceId": {
            "type": "string",
            "description": "Device id. Example: S111F1202200226"
          },
          "hostName": {
            "type": "string",
            "description": "Device Hostname. Example: S144T1212101212"
          },
          "status": {
            "type": "string",
            "description": "Reboot trigger status. Possible status values are: SUCCESS, FAILED. Example: SUCCESS"
          },
          "userId": {
            "type": "string",
            "description": "Id of the user, who triggered the operation. Example: 7777dds7-5c5c-444f-8888-d7f77733f7e7"
          },
          "createTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation created time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          }
        },
        "description": "Reboot operation response model."
      },
      "RebootRequest": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "description": "Device id. Example: S111F1202200226"
          },
          "rebootDelayNanos": {
            "type": "integer",
            "format": "int64",
            "description": "Reboot delay time in nanoSeconds. Example: 692573933451"
          }
        },
        "description": "Reboot batch request model."
      },
      "SoftwareMetadataSearchResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntitySoftwareMetadata"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "PaginatedResponseEntitySoftwareMetadata": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SoftwareMetadata"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SoftwareMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Software package id. Example: SYS.A3.R10.XXX.0.977.016.00"
          },
          "hash": {
            "type": "string",
            "description": "It represents the MD5 hash of the software package file. Example: c1f9830sf4eb5vaa74p7a2023dd2defr"
          },
          "description": {
            "type": "string",
            "description": "Description about the software package. Example: Latest software package."
          },
          "buildTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Software image build time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).  Example: 1660056457936"
          },
          "path": {
            "type": "string",
            "description": "Path of the software package file. Example: https://software.tcc.cloud.taranawireless.com/api/software/package/SYS.A3.R10.XXX.0.977.016.00.tbn"
          },
          "downloadPath": {
            "type": "string",
            "description": "Download path of the software package. Example: https://software.trial.cloud.taranawireless.com/api/tsi/v1/software-inventory/package/SYS.A3.R10.XXX.0.977.016.00.tbn"
          },
          "publishTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Publish time of the software image in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1660056457936"
          },
          "publishUser": {
            "type": "string",
            "description": "User who has published the software package. Example: johnk@taranawireless.com"
          },
          "lastUpdateTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Last updated time of the software image in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1660056457936"
          },
          "lastUpdateUser": {
            "type": "string",
            "description": "User who has last updated  the software package. Example: johnk@taranawireless.com"
          },
          "releaseNotesLink": {
            "type": "string",
            "description": "Software package release notes link. Example: https://dummy-link.taranawireless.com"
          },
          "sizeBytes": {
            "type": "integer",
            "format": "int64",
            "description": "Software package size in bytes. Example: 176896000"
          },
          "bnCompatible": {
            "type": "boolean",
            "description": "It denotes, whether software package is BN compatible. Example: true"
          },
          "rnCompatible": {
            "type": "boolean",
            "description": "It denotes, whether software package is RN compatible. Example: true"
          },
          "tags": {
            "type": "array",
            "description": "Tags list.",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        },
        "description": "Software package metadata details model"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tag name. Example: stable"
          },
          "description": {
            "type": "string",
            "description": "Tag description. Example: This tag represents it is a stable version."
          },
          "createTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Tag creation time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1660056457936"
          },
          "createUser": {
            "type": "string",
            "description": "User who has created the tag. Example: johnk@taranawireless.com"
          }
        },
        "description": "Tag information model"
      },
      "NorthboundSoftwareInstallRequest": {
        "type": "object",
        "required": [
          "packageId"
        ],
        "properties": {
          "packageId": {
            "type": "string",
            "description": "Description: Software package id to be installed. Example: SYS.A3.B10.XXX.0.995.000.01"
          },
          "activate": {
            "type": "boolean",
            "description": "Description: Whether to activate software after being installed. Example: true"
          },
          "factory": {
            "type": "boolean",
            "description": "Description: Whether to install software to factory Partition. Example: true"
          }
        },
        "description": "Software install operation request model."
      },
      "SoftwareInstallStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SoftwareInstallOperation"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SoftwareInstallOperation": {
        "type": "object",
        "properties": {
          "opId": {
            "type": "string",
            "description": "Software install operation id. Example: f8da40f4-2d41-4d97-afd1-d82eacd5f7d1"
          },
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "deviceId": {
            "type": "string",
            "description": "Device id. Example: S111F1202200226"
          },
          "hostName": {
            "type": "string",
            "description": "Device Hostname. Example: S144T1212101212"
          },
          "packageId": {
            "type": "string",
            "description": "Software package id. Example: SYS.A3.B10.XXX.0.995.000.01"
          },
          "factoryPartition": {
            "type": "boolean",
            "description": "Upgrade factory partition. Example: true"
          },
          "activate": {
            "type": "boolean",
            "description": "It denotes whether the software has been activated after being installed. Example: true"
          },
          "downloadOnly": {
            "type": "boolean",
            "description": "Download only option. Example: true"
          },
          "status": {
            "type": "string",
            "description": "Overall software install status. Possible status values are: QUEUED, RUNNING, SUCCESS, FAILED. Example: QUEUED"
          },
          "downloadProgress": {
            "type": "integer",
            "format": "int64",
            "description": "Progress on the software download.  Example: 100"
          },
          "upgradeStatus": {
            "type": "integer",
            "format": "int64",
            "description": "Status of the software upgrade. Example: 10"
          },
          "upgradeMessage": {
            "type": "string",
            "description": "Software upgrade message. Example: Upgrade success"
          },
          "bank": {
            "type": "string",
            "description": "Software install bank. Available software banks are: factory, system1, system2. Example: system2"
          },
          "downloadPath": {
            "type": "string",
            "description": "Software download path. Example: https://software.trial.cloud.taranawireless.com/api/tsi/v1/software-inventory/package/SYS.A3.R10.XXX.0.977.016.00.tbn"
          },
          "debugMessage": {
            "type": "string",
            "description": "Development debug message. Example: triggerDownload-Timeout"
          },
          "createTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation created time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "startTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "updateTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation last update time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "expiryTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation expiration time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          }
        },
        "description": "Software installation operation details status."
      },
      "NorthboundPushLatestConfigResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundPushLatestConfigDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthboundPushLatestConfigDetails": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "entityType": {
            "type": "string",
            "description": "Entity type. Example: Device"
          },
          "entityId": {
            "type": "string",
            "description": "Entity id. Example: S111F1202200226"
          },
          "entityVersion": {
            "type": "string",
            "description": "Entity version. Example: v1"
          },
          "operationStatus": {
            "type": "string",
            "description": "Device configuration operation status. Example: SUCCESS"
          },
          "operationType": {
            "type": "string",
            "description": "Type of the operation.Possible operation types are: SET_CONFIG, SAVE_CONFIG, DELETE_CONFIG, LOAD_CONFIG. Example: SET_CONFIG"
          },
          "operationStartMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "operationCompletedMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation expiration time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          }
        },
        "description": "Push latest configuration details."
      },
      "NorthboundSaveDeviceConfigResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundSaveDeviceConfigDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthboundSaveDeviceConfigDetails": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "version": {
            "type": "string",
            "description": "Operation version."
          }
        },
        "description": "Save device configuration details"
      },
      "ModelConfiguration": {
        "type": "object",
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConfigDetails"
            }
          }
        }
      },
      "ConfigDetails": {
        "type": "object",
        "properties": {
          "pathValue": {
            "$ref": "#/components/schemas/PathValue"
          },
          "appliedAt": {
            "type": "string",
            "enum": [
              "SELF",
              "PARENT"
            ]
          }
        }
      },
      "PathValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object"
          },
          "valueType": {
            "type": "string",
            "enum": [
              "STRING",
              "INT",
              "UINT",
              "FLOAT",
              "BOOLEAN",
              "UNKNOWN"
            ]
          }
        }
      },
      "RebootBatchResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RebootBatchResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "RebootBatchResult": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "items": {
            "type": "array",
            "description": "It represents list of reboot operation result.",
            "items": {
              "$ref": "#/components/schemas/RebootOperationResult"
            }
          }
        },
        "description": "Response model of reboot batch operation."
      },
      "RebootOperationResult": {
        "type": "object",
        "properties": {
          "request": {
            "description": "Reboot batch request model.",
            "$ref": "#/components/schemas/RebootRequest"
          },
          "data": {
            "description": "Reboot operation response model.",
            "$ref": "#/components/schemas/RebootOperation"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        },
        "description": "Response model of reboot operation result."
      },
      "NorthboundRebootBatchRequest": {
        "type": "object",
        "properties": {
          "serialNumbers": {
            "type": "array",
            "description": "Description: list of device serial numbers on which reboot operation needs to be performed.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Reboot batch request model"
      },
      "SoftwareInstallBatchResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SoftwareInstallBatchResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SoftwareInstallBatchResult": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "items": {
            "type": "array",
            "description": "It represents list of software install operation result.",
            "items": {
              "$ref": "#/components/schemas/SoftwareInstallOperationResult"
            }
          }
        },
        "description": "Software install batch operation response model."
      },
      "SoftwareInstallOperationResult": {
        "type": "object",
        "properties": {
          "request": {
            "description": "It represents software install operation request.",
            "$ref": "#/components/schemas/NorthboundSoftwareInstallRequest"
          },
          "data": {
            "description": "Software installation operation details status.",
            "$ref": "#/components/schemas/SoftwareInstallOperation"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        },
        "description": "Software install operation response model."
      },
      "SoftwareInstallBatchRequest": {
        "type": "object",
        "properties": {
          "serialNumbers": {
            "type": "array",
            "description": "Description: list of device serial numbers on which software needs to be installed. Example: S111F1202200226",
            "items": {
              "type": "string"
            }
          },
          "packageId": {
            "type": "string",
            "description": "Description: Software package id to be installed. Example: SYS.A3.B10.XXX.0.995.000.01"
          },
          "activate": {
            "type": "boolean",
            "description": "Description: Whether to activate software after being installed. Example: true"
          },
          "factory": {
            "type": "boolean",
            "description": "Description: Whether to install software to factory Partition. Example: true"
          }
        },
        "description": "Software install operation batch request model."
      },
      "DeviceOperationStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceOperationDetails": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string"
          },
          "batchId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "requestTimeMillis": {
            "type": "integer",
            "format": "int64"
          },
          "networkHierarchy": {
            "$ref": "#/components/schemas/NetworkHierarchy"
          },
          "operationDetails": {
            "$ref": "#/components/schemas/OperationDetails"
          }
        }
      },
      "OperationDetails": {
        "type": "object"
      },
      "NetworkHierarchyDetails": {
        "type": "object",
        "properties": {
          "regionName": {
            "type": "string",
            "description": "Region Name. Example: Alaska"
          },
          "marketName": {
            "type": "string",
            "description": "Market Name. Example: Juneau"
          },
          "siteName": {
            "type": "string",
            "description": "Site Name. Example: Nugget Mall Rooftop"
          },
          "cellName": {
            "type": "string",
            "description": "Cell Name. Example: Cell-0"
          },
          "sectorName": {
            "type": "string",
            "description": "Sector Name. Example: Sector-2"
          }
        },
        "description": "Network hierarchy information of the device."
      },
      "DeviceConfigOperationStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceConfigOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceConfigOperationDetails": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "serialNumber": {
            "type": "string",
            "description": "Description: Serial number of the device. Example: S111F1202200226"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation. Possible operation statuses are: QUEUED, RUNNING, SETCONFIG_FAILED, SAVECONFIG_FAILED, SETCONFIG_SKIPPED, SUCCESS, FAILED, PARTIAL_SUCCESS, ABORTED. Example: SUCCESS"
          },
          "requestTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "networkHierarchyDetails": {
            "description": "Network hierarchy information of the device.",
            "$ref": "#/components/schemas/NetworkHierarchyDetails"
          }
        },
        "description": "Device configuration operation details model."
      },
      "DeviceRebootOperationStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceRebootOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceRebootOperationDetails": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "serialNumber": {
            "type": "string",
            "description": "Description: Serial number of the device. Example: S111F1202200226"
          },
          "status": {
            "type": "string",
            "description": "Reboot trigger status. Possible status values are: SUCCESS, FAILED. Example: SUCCESS"
          },
          "requestTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "networkHierarchyDetails": {
            "description": "Network hierarchy information of the device.",
            "$ref": "#/components/schemas/NetworkHierarchyDetails"
          },
          "operationDetails": {
            "description": "Operation details for reboot operation.",
            "$ref": "#/components/schemas/RebootOperationDetails"
          }
        },
        "description": "Abstracts reboot operation response model."
      },
      "RebootOperationDetails": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Id of the user, who triggered the operation. Example: 7777dds7-5c5c-444f-8888-d7f77733f7e7"
          },
          "hostName": {
            "type": "string",
            "description": "Description: Hostname of the device. Example: S144T1212101212"
          }
        },
        "description": "Operation details for reboot operation."
      },
      "DeviceUpgradeOperationStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceUpgradeOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceUpgradeOperationDetails": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "serialNumber": {
            "type": "string",
            "description": "Description: Serial number of the device. Example: S111F1202200226"
          },
          "status": {
            "type": "string",
            "description": "Overall software install status. Possible status values are: QUEUED, RUNNING, SUCCESS, FAILED. Example: SUCCESS"
          },
          "requestTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "networkHierarchyDetails": {
            "description": "Network hierarchy information of the device.",
            "$ref": "#/components/schemas/NetworkHierarchyDetails"
          },
          "operationDetails": {
            "description": "Operation details for Upgrade operation.",
            "$ref": "#/components/schemas/UpgradeOperationDetails"
          }
        },
        "description": "Abstracts device upgrade operation response model."
      },
      "UpgradeOperationDetails": {
        "type": "object",
        "properties": {
          "hostName": {
            "type": "string",
            "description": "Description: Hostname of the device. Example: S144T1212101212"
          },
          "packageId": {
            "type": "string",
            "description": "Software package id. Example: SYS.A3.B10.XXX.0.995.000.01"
          },
          "factoryPartition": {
            "type": "boolean",
            "description": "Description: Whether to install software to factory Partition. Example: true"
          },
          "activate": {
            "type": "boolean",
            "description": "It denotes whether the software has been activated after install. Example: true"
          },
          "downloadOnly": {
            "type": "boolean",
            "description": "Description: Download only option. Example: true"
          },
          "downloadProgress": {
            "type": "integer",
            "format": "int64",
            "description": "Download only option. Example: true"
          },
          "upgradeStatus": {
            "type": "integer",
            "format": "int64",
            "description": "Software upgrade status. Example: 1"
          },
          "upgradeMessage": {
            "type": "string",
            "description": "Software upgrade message. Example: Upgrade success"
          },
          "bank": {
            "type": "string",
            "description": "Software install bank. Example: system2"
          },
          "downloadPath": {
            "type": "string",
            "description": "Software download path. Example: https://software.trial.cloud.taranawireless.com/api/tsi/v1/software-inventory/package/SYS.A3.R10.XXX.0.977.016.00.tbn"
          },
          "debugMessage": {
            "type": "string",
            "description": "Development debug message. Example: triggerDownload-Timeout"
          },
          "startTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "updateTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation last update time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "expiryTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation expiration time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          }
        },
        "description": "Operation details for Upgrade operation."
      },
      "DeviceSnapshotOperationStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeviceSnapshotOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceSnapshotOperationDetails": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial number of the device. Example: S111F1202200226"
          },
          "status": {
            "type": "string",
            "description": "Snapshot operation status. Possible status values are: PENDING, COMPLETED, PARTIAL_COMPLETED, SNAPSHOT_UPLOADED, FAILED, RECEIVED_FROM_DEVICE. Example: COMPLETED"
          },
          "requestTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "networkHierarchyDetails": {
            "description": "Network hierarchy information of the device.",
            "$ref": "#/components/schemas/NetworkHierarchyDetails"
          },
          "operationDetails": {
            "description": "Operation details for Snapshot operation",
            "$ref": "#/components/schemas/SnapshotOperationDetails"
          }
        },
        "description": "Abstracts device snapshot operation details."
      },
      "SnapshotOperationDetails": {
        "type": "object",
        "properties": {
          "statusText": {
            "type": "string",
            "description": "Snapshot operation status text.Possible status text values are: PENDING, COMPLETED, PARTIAL COMPLETED, SNAPSHOT UPLOADED, SNAPSHOT CREATION FAILED, RECEIVED FROM DEVICE. Example: COMPLETED"
          },
          "fileUploadPath": {
            "type": "string",
            "description": "File path to upload the device snapshot. Example: tarana:SN1234BP76/2023-04-05T10-45-04/ab693bc2-6d5a-45a6-975h-699ad073j7bd/"
          },
          "fileRetrievePath": {
            "type": "string",
            "description": "File path to retrieve the device snapshot. Example: https://portal.tcc.cloud.taranawireless.com/api/tsm/v1/browse/snapshot/file/SN1234PJ45/2021-11-03T23-31-50/e50c7806-7777-4501-80c6-02740714321d/1_SN1234PJ45_2021-11-03T23:31:17_FAILURES.zip"
          },
          "prefix": {
            "type": "string",
            "description": "File path prefix to retrieve the snapshot. Example: SN1234PJ45/2021-11-03T23-31-50/e50c7806-7777-4501-80c6-02740714321d"
          },
          "userId": {
            "type": "string",
            "description": "Id of the user, who triggered the operation. Example: 7777dds7-5c5c-444f-8888-d7f77733f7e7"
          },
          "hostName": {
            "type": "string",
            "description": "Description: Hostname of the device. Example: S144T1212101212"
          },
          "fileName": {
            "type": "string",
            "description": "Name of the snapshot file. Example: 1_SN1234PJ45_2021-11-03T23:31:17_FAILURES.tbn"
          },
          "category": {
            "type": "string",
            "description": "Category of the snapshot. Example: User Generated"
          }
        },
        "description": "Operation details for Snapshot operation"
      },
      "DeviceRebootBatchOperationsStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityDeviceRebootBatchOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "PaginatedResponseEntityDeviceRebootBatchOperationDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceRebootBatchOperationDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeviceRebootBatchOperationDetails": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "serialNumber": {
            "type": "string",
            "description": "Description: Serial number of the device. Example: S111F1202200226"
          },
          "status": {
            "type": "string",
            "description": "Reboot trigger status. Possible status values are: SUCCESS, FAILED. Example: SUCCESS"
          },
          "networkHierarchyDetails": {
            "description": "Network hierarchy information of the device.",
            "$ref": "#/components/schemas/NetworkHierarchyDetails"
          },
          "operationDetails": {
            "description": "Operation details for reboot operation.",
            "$ref": "#/components/schemas/RebootOperationDetails"
          }
        },
        "description": "Abstracts device reboot batch operation response model."
      },
      "DeviceUpgradeBatchOperationsStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityDeviceUpgradeBatchOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "PaginatedResponseEntityDeviceUpgradeBatchOperationDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceUpgradeBatchOperationDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "DeviceUpgradeBatchOperationDetails": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "description": "Batch id of the operation. Example: 1879dac3-d8b4-44b7-aa8b-af1949e62288"
          },
          "serialNumber": {
            "type": "string",
            "description": "Description: Serial number of the device. Example: S111F1202200226"
          },
          "status": {
            "type": "string",
            "description": "Overall software install status. Possible status values are: QUEUED, RUNNING, SUCCESS, FAILED. Example: SUCCESS"
          },
          "networkHierarchyDetails": {
            "description": "Network hierarchy information of the device.",
            "$ref": "#/components/schemas/NetworkHierarchyDetails"
          },
          "operationDetails": {
            "description": "Operation details for Upgrade operation.",
            "$ref": "#/components/schemas/UpgradeOperationDetails"
          }
        },
        "description": "Abstracts device upgrade batch operation response model."
      },
      "GenericResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SpeedTestSetBaselineResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "StartPingTestResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StartPingTestResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "StartPingTestResult": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "testStatus": {
            "type": "string",
            "description": "Status of the operation. Example: STATUS_OK"
          },
          "serialNumber": {
            "type": "string",
            "description": "BN Serial number on which to initiate a ping test. Example: S111F1202200226"
          },
          "destination": {
            "type": "string",
            "description": "Destination to be pinged from device. Example: google.com"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "No of packets sent. Example: 5"
          },
          "deviceIp": {
            "type": "string",
            "description": "IP address of device. Example: 192.121.1.1"
          },
          "devicePort": {
            "type": "integer",
            "format": "int32",
            "description": "Port number of the device. Example: 8088"
          }
        },
        "description": "Start ping test operation details response model."
      },
      "StopPingTestRequest": {
        "type": "object",
        "required": [
          "serialNumber"
        ],
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "BN Serial number. Example: S111F1202200226"
          }
        },
        "description": "Stop ping test request model."
      },
      "StopPingTestResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StopPingTestResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "StopPingTestResult": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "testStatus": {
            "type": "string",
            "description": "Status of the operation. Example: STATUS_OK"
          },
          "serialNumber": {
            "type": "string",
            "description": "BN Serial number on which the operation was initiated. Example: S111F1202200226"
          },
          "deviceIp": {
            "type": "string",
            "description": "IP address of the device. Example: 192.121.1.1"
          },
          "devicePort": {
            "type": "integer",
            "format": "int32",
            "description": "Port number of the device. Example: 8088"
          }
        },
        "description": "Stop ping test operation details response model."
      },
      "GetPingTestResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GetPingTestResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "GetPingTestResult": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "testStatus": {
            "type": "string",
            "description": "Status of the operation. Example: STATUS_OK"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "No of packets sent. Example: 5"
          },
          "deviceIp": {
            "type": "string",
            "description": "IP address of the device. Example: 192.121.1.1"
          },
          "devicePort": {
            "type": "integer",
            "format": "int32",
            "description": "Port number of the device. Example: 8088"
          },
          "avgTimeNanos": {
            "type": "integer",
            "format": "int64",
            "description": "Average round trip time in nanoseconds. Example: 1728200"
          },
          "bytesReceived": {
            "type": "integer",
            "format": "int32",
            "description": "Bytes received. Example: 0"
          },
          "maxTimeNanos": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum round trip time in nanoseconds. Example: 1728200"
          },
          "packetsReceived": {
            "type": "integer",
            "format": "int32",
            "description": "Total packets received. Example: 5"
          },
          "minTimeNanos": {
            "type": "integer",
            "format": "int64",
            "description": "Minimum round trip time in nanoseconds. Example: 1728200"
          },
          "packetsSent": {
            "type": "integer",
            "format": "int32",
            "description": "Total packets sent. Example: 5"
          },
          "sequence": {
            "type": "integer",
            "format": "int32",
            "description": "Sequence number of received packet. Example: 5"
          },
          "source": {
            "type": "string",
            "description": "Source. Example: S111F1202200226"
          },
          "destination": {
            "type": "string",
            "description": "Destination to be pinged from device. Example: 142.250.191.46"
          },
          "stdDev": {
            "type": "integer",
            "format": "int64",
            "description": "Standard deviation in round trip time. Example: 0"
          },
          "roundTripTimeNanos": {
            "type": "integer",
            "format": "int64",
            "description": "Round trip time in nanoseconds. Example: 1728200"
          },
          "ttlNanos": {
            "type": "integer",
            "format": "int32",
            "description": "Remaining Time-to-Live value in nanoseconds. Example: 0"
          }
        },
        "description": "Get ping test result response details model."
      },
      "StartTracerouteResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StartTracerouteTestResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "StartTracerouteTestResult": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "testStatus": {
            "type": "string",
            "description": "Status of the operation as provided by device. Example: STATUS_OK"
          },
          "serialNumber": {
            "type": "string",
            "description": "BN Serial number on which to initiate a traceroute test. Example: S111F1202200226"
          },
          "deviceIp": {
            "type": "string",
            "description": "IP address of the device. Example: 192.121.1.1"
          },
          "devicePort": {
            "type": "integer",
            "format": "int32",
            "description": "Port number of the device. Example: 8088"
          },
          "destination": {
            "type": "string",
            "description": "Destination to be pinged from device. Example: google.com"
          }
        },
        "description": "Start traceroute test operation details response model."
      },
      "StopTracerouteTestRequest": {
        "type": "object",
        "required": [
          "serialNumber"
        ],
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "BN Serial number. Example: S111F1202200226"
          }
        },
        "description": "Stop traceroute test request model."
      },
      "StopTracerouteTestResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StopTracerouteTestResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "StopTracerouteTestResult": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "testStatus": {
            "type": "string",
            "description": "Status of the operation. Example: STATUS_OK"
          },
          "serialNumber": {
            "type": "string",
            "description": "BN Serial number on which the operation was initiated. Example: S111F1202200226"
          },
          "deviceIp": {
            "type": "string",
            "description": "IP address of the device. Example: 192.121.1.1"
          },
          "devicePort": {
            "type": "integer",
            "format": "int32",
            "description": "Port number of the device. Example: 8088"
          }
        },
        "description": "Stop traceroute test operation response model."
      },
      "GetTracerouteTestResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GetTracerouteTestResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "GetTracerouteTestResult": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "testStatus": {
            "type": "string",
            "description": "Status of the operation. Example: STATUS_OK"
          },
          "deviceIp": {
            "type": "string",
            "description": "IP address of the device. Example: 192.121.1.1"
          },
          "devicePort": {
            "type": "integer",
            "format": "int32",
            "description": "Port number of the device. Example: 8088"
          },
          "source": {
            "type": "string",
            "description": "Source. Example: S111F1202200226"
          },
          "destination": {
            "type": "string",
            "description": "Destination. Example: google.com"
          },
          "traceroutePacketResults": {
            "type": "array",
            "description": "List of traceroute packet response model.",
            "items": {
              "$ref": "#/components/schemas/TraceroutePacketResult"
            }
          }
        },
        "description": "Get traceroute test result response model."
      },
      "TraceroutePacketResult": {
        "type": "object",
        "properties": {
          "destinationName": {
            "type": "string",
            "description": "Destination name. Example: google.com"
          },
          "destinationAddress": {
            "type": "string",
            "description": "Destination address. Example: 172.217.164.110"
          },
          "hops": {
            "type": "integer",
            "format": "int32",
            "description": "The number of routers that a packet passes through from a source to a destination. Example: 5"
          },
          "packetSize": {
            "type": "integer",
            "format": "int32",
            "description": "Packet size. Example: 512"
          },
          "hop": {
            "type": "integer",
            "format": "int32",
            "description": "Hop number. Example: 5"
          },
          "address": {
            "type": "string",
            "description": "IP address of responding hop. Example: 192.121.1.1"
          },
          "name": {
            "type": "string",
            "description": "Name of responding hop. Example: 192.121.1.1"
          },
          "rttNanos": {
            "type": "integer",
            "format": "int64",
            "description": "Round trip time in nanoseconds. Example: 1728200"
          },
          "state": {
            "type": "string",
            "description": "State of a single traceroute packet. Example: DEFAULT"
          },
          "icmpCode": {
            "type": "integer",
            "format": "int32",
            "description": "Code terminating hop. Example: 0"
          },
          "mplsMap": {
            "type": "object",
            "description": "MPLS key/value pairs.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "asPathList": {
            "type": "array",
            "description": "AS path.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Traceroute packet response model."
      },
      "NorthboundDeviceConfigOperationResponse": {
        "type": "object",
        "properties": {
          "opId": {
            "type": "string",
            "description": "Operation Id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "entityType": {
            "type": "string",
            "description": "Entity type. Example: DEVICE"
          },
          "entityId": {
            "type": "string",
            "description": "Entity Id. Example: S111F1202200226"
          },
          "entityVersion": {
            "type": "string",
            "description": "ENTITY VERSION. Example: v1"
          },
          "operationStatus": {
            "type": "string",
            "description": "Status of the operation. Possible operation status are: QUEUED, RUNNING, SETCONFIG_FAILED, SAVECONFIG_FAILED, SETCONFIG_SKIPPED, SUCCESS, FAILED, PARTIAL_SUCCESS, ABORTED. Example: SUCCESS"
          },
          "operationType": {
            "type": "string",
            "description": "Type of the operation.Possible operation type are: SET_CONFIG, SAVE_CONFIG, DELETE_CONFIG, LOAD_CONFIG. Example: SET_CONFIG"
          },
          "operationStartMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "operationCompletedMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation completed time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          }
        },
        "description": "Push latest device config response model."
      },
      "NorthboundUpdateMuteStateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundDeviceConfigOperationResponse"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "DeviceStartSpeedTestRequest": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Serial number of the device. Example: S111F1202200226"
          }
        }
      },
      "StopSpeedTestResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SpeedTestOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthboundStartSpeedTestResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SpeedTestOperationDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SpeedTestOperationDetails": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Serial number of the device. Example: S111F1202200226"
          },
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "diagnosticOperationStatus": {
            "type": "string",
            "description": "Status of the operation as determined by service. Possible status values are: QUEUED, IN_PROGRESS, IN_PROGRESS_TELEMETRY_DATA, IN_PROGRESS_DOWNLINK, IN_PROGRESS_UPLINK, STOPPED, COMPLETED, FAILED. Example: COMPLETED",
            "enum": [
              "QUEUED",
              "IN_PROGRESS",
              "IN_PROGRESS_TELEMETRY_DATA",
              "IN_PROGRESS_DOWNLINK",
              "IN_PROGRESS_UPLINK",
              "STOPPED",
              "COMPLETED",
              "FAILED"
            ]
          },
          "deviceOperationStatus": {
            "type": "string",
            "description": "Status of the operation as provided by device. Example: STATUS_OK"
          },
          "startTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "endTimeMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Operation end time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          }
        },
        "description": "Speed test operation details model."
      },
      "NorthboundSpeedTestResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundSpeedTestResult"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthboundSpeedTestResult": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation id. Example: c1df6344-6747-4cdd-97d8-14b45fb66d2c"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "Operation start time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC). Example: 1680676419631"
          },
          "downlinkThroughput": {
            "type": "integer",
            "format": "int32",
            "description": "Downlink throughput(Kbps). Example: 63948"
          },
          "uplinkThroughput": {
            "type": "integer",
            "format": "int32",
            "description": "Uplink throughput(Kbps). Example: 63948"
          },
          "downlinkSnr": {
            "type": "object",
            "description": "Downlink SNR. Example: 30.708334"
          },
          "uplinkSnr": {
            "type": "object",
            "description": "Uplink SNR. Example: 30.708334"
          },
          "pathloss": {
            "type": "object",
            "description": "Pathloss. Example: 103.25"
          },
          "frequency0": {
            "type": "object",
            "description": "Frequency 0. Example: 3600000"
          },
          "frequency1": {
            "type": "object",
            "description": "Frequency 1. Example: 3600000"
          },
          "bandwidth0": {
            "type": "object",
            "description": "Bandwidth 0. Example: 40"
          },
          "bandwidth1": {
            "type": "object",
            "description": "Bandwidth 1. Example: 40"
          },
          "rfLinkDistance": {
            "type": "object",
            "description": "RF Link Distance. Example: 0"
          },
          "bnSerialNumber": {
            "type": "string",
            "description": "Serial number of the device. Example: S111F1202200226"
          },
          "status": {
            "type": "string",
            "description": "Status of the operation. Example: QUEUED"
          },
          "failureReason": {
            "type": "string",
            "description": "Operation failure reason. Example: Downlink test did not completed successfully"
          },
          "isBaseline": {
            "type": "boolean",
            "description": "Baseline result. Example: true"
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial number of the RN device. Example: S111F1202200226"
          },
          "userEmail": {
            "type": "string",
            "description": "Email of the user who created the operation. Example: johnk@taranawireless.com"
          },
          "latencyMillis": {
            "type": "number",
            "format": "double",
            "example": 6196.6552734375,
            "description": "Round trip latency milli seconds"
          }
        },
        "description": "Speed test result response model."
      },
      "StartPingTestRequest": {
        "type": "object",
        "required": [
          "destination"
        ],
        "properties": {
          "destination": {
            "type": "string",
            "description": "Destination to be pinged from device. Example: google.com"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "No of packets. Example: 5"
          }
        },
        "description": "Start ping test request model."
      },
      "StartTracerouteTestRequest": {
        "type": "object",
        "required": [
          "destination"
        ],
        "properties": {
          "destination": {
            "type": "string",
            "description": "Destination to be pinged from device. Example: 142.250.191.46"
          }
        },
        "description": "Start traceroute test operation request model."
      },
      "NorthboundCollectorDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ebe09460-ca9c-4e25-8a0e-86c75ed82b97",
            "description": "Telemetry Collector id."
          },
          "name": {
            "type": "string",
            "example": "defaultCollectorConfig",
            "description": "Unique name to identify the collector configuration."
          },
          "host": {
            "type": "string",
            "example": "1.1.1.1",
            "description": "Telemetry Streaming host.This can be an IP address or a domain name."
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "example": 8080,
            "description": "Telemetry Streaming port"
          },
          "intervalSeconds": {
            "type": "integer",
            "format": "int32",
            "example": 60,
            "description": "This is streaming interval duration in seconds. Default to 60 seconds. Allowed values are 60, 300, 900, 1800, 3600"
          },
          "authMethod": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Auth Method for the collector configuration. 1 translates to NO_TLS and 2 translates to ONE_WAY_TLS"
          }
        },
        "description": "Telemetry collector configuration details."
      },
      "NorthboundCollectorDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundCollectorDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NewCollector": {
        "type": "object",
        "required": [
          "host",
          "intervalSeconds",
          "name",
          "port"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "defaultCollectorConfig",
            "description": "Unique name to identify the collector configuration."
          },
          "host": {
            "type": "string",
            "example": "1.1.1.1",
            "description": "Telemetry Streaming host.This can be an IP address or a domain name."
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "example": 8080,
            "description": "Telemetry Streaming port"
          },
          "intervalSeconds": {
            "type": "integer",
            "format": "int32",
            "example": 60,
            "description": "This is streaming interval duration in seconds. Default to 60 seconds. Allowed values are 60, 300, 900, 1800, 3600"
          },
          "authMethod": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Auth Method for the collector configuration. 1 translates to NO_TLS and 2 translates to ONE_WAY_TLS"
          },
          "accessKey": {
            "type": "string",
            "example": "taranaAccessKey",
            "description": "Access key to push on device for device authentication by operator"
          }
        },
        "description": "Model to add a new telemetry streaming configuration.Note: The fields marked with * are mandatory."
      },
      "NorthboundCollectorUpdate": {
        "type": "object",
        "required": [
          "host",
          "intervalSeconds",
          "name",
          "port"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "defaultCollectorConfig",
            "description": "Unique name to identify the collector configuration."
          },
          "host": {
            "type": "string",
            "example": "1.1.1.1",
            "description": "Telemetry Streaming host.This can be an IP address or a domain name."
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "example": 8080,
            "description": "Telemetry Streaming port"
          },
          "intervalSeconds": {
            "type": "integer",
            "format": "int32",
            "example": 60,
            "description": "This is streaming interval duration in seconds. Default to 60 seconds. Allowed values are 60, 300, 900, 1800, 3600"
          },
          "authMethod": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Auth Method for the collector configuration. 1 translates to NO_TLS and 2 translates to ONE_WAY_TLS"
          },
          "accessKey": {
            "type": "string",
            "example": "taranaAccessKey",
            "description": "Access key to push on device for device authentication by operator"
          }
        },
        "description": "Model to update telemetry streaming configuration.Note: The fields marked with * are mandatory."
      },
      "NorthboundCollectorPaginatedResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityNorthboundCollectorDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "PaginatedResponseEntityNorthboundCollectorDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NorthboundCollectorDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OperatorDetailsResponseEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OperatorDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SpectrumPolicy": {
        "type": "object",
        "properties": {
          "fccOrId": {
            "type": "string",
            "example": "taranaFccId",
            "description": "fccOrId"
          },
          "sasProvider": {
            "type": "string",
            "example": "Tarana",
            "description": "Description: Name of the SAS provider. This field is required for CBRS Operators"
          },
          "afcsProvider": {
            "type": "string",
            "example": "Tarana",
            "description": "Description: Name of the AFCS provider. This field is required for 6GHz Operators"
          }
        },
        "description": "Model to add a new Operator. Note: The fields marked with * are mandatory."
      },
      "DeviceTelemetryCollectorDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ebe09460-ca9c-4e25-8a0e-86c75ed82b97",
            "description": "Telemetry Collector id."
          },
          "name": {
            "type": "string",
            "example": "defaultCollectorConfig",
            "description": "Unique name to identify the collector configuration."
          },
          "host": {
            "type": "string",
            "example": "1.1.1.1",
            "description": "Telemetry Streaming host.This can be an IP address or a domain name."
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "example": 8080,
            "description": "Telemetry Streaming port"
          },
          "intervalSeconds": {
            "type": "integer",
            "format": "int32",
            "example": 60,
            "description": "This is streaming interval duration in seconds. Default to 60 seconds. Allowed values are 60, 300, 900, 1800, 3600"
          },
          "enabled": {
            "type": "boolean",
            "example": true,
            "description": "Description: Used to enable collector configuration. Allowed values are true and false"
          }
        },
        "description": "Telemetry collector configuration details."
      },
      "NorthboundSwitchBootBankOperation": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "example": "S111F1202200226",
            "description": "Serial number"
          },
          "bank": {
            "type": "string",
            "example": "system1",
            "description": "bank"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS",
            "description": "Switch boot bank trigger status. Possible status values are: SUCCESS, FAILED"
          },
          "createTimeMillis": {
            "type": "integer",
            "format": "int64",
            "example": 1680676419631,
            "description": "Operation created time in milliseconds. The value is the timestamp relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC)."
          }
        },
        "description": "Switch boot bank operation response model."
      },
      "NorthboundSwitchBootBankResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundSwitchBootBankOperation"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "SwitchBootBankRequest": {
        "type": "object",
        "required": [
          "bank",
          "serialNumber"
        ],
        "properties": {
          "serialNumber": {
            "type": "string",
            "example": "S111F1202200226",
            "description": "Serial number"
          },
          "bank": {
            "type": "string",
            "example": "system1",
            "description": "bank"
          }
        },
        "description": "Switch boot bank request model"
      },
      "NorthboundOperatorDetailsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundOperatorDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "NorthboundOperatorDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Operator Id"
          },
          "name": {
            "type": "string",
            "example": "Acme",
            "description": "Operator Name"
          },
          "notes": {
            "type": "string",
            "example": "This operator is owned by Acme company.",
            "description": "Description of the operator"
          },
          "contactPerson": {
            "type": "string",
            "example": "John Kite",
            "description": "Name of the contact person."
          },
          "email": {
            "type": "string",
            "example": "johnk@taranawireless.com",
            "description": "Email of the contact person."
          },
          "timeZone": {
            "type": "string",
            "example": "Pacific/Wallis",
            "description": "Timezone of the operator."
          },
          "fccOrId": {
            "type": "string",
            "example": "taranaFccId",
            "description": "fccOrId"
          },
          "spectrumPolicy": {
            "description": "Spectrum policy of the operator. This field is required for Operators to be able to use the CBRS or 6GHz spectrum.",
            "$ref": "#/components/schemas/SpectrumPolicy"
          },
          "sasProvider": {
            "type": "string",
            "example": "Tarana",
            "description": "Name of the SAS provider."
          },
          "softwareTags": {
            "type": "array",
            "example": "Stable",
            "description": "It represents the operator's access to available software packages.",
            "items": {
              "type": "string"
            }
          },
          "primaryBnEnabled": {
            "type": "boolean",
            "example": true,
            "description": "It denotes whether instant auto connect to primary BN is enabled. Allowed values are true and false"
          },
          "autoReconnectToPrimaryBnEnabled": {
            "type": "boolean",
            "example": true,
            "description": "To enable instant auto connect to primary BN. Allowed values are true and false"
          },
          "primaryBnSearchTimeoutSeconds": {
            "type": "integer",
            "format": "int32",
            "example": 3000,
            "description": "Time configured for RN to stay silent when BN goes offline for a brief time",
            "minimum": 0,
            "maximum": 3600
          },
          "telemetryEnabled": {
            "type": "boolean",
            "example": true,
            "description": "Used to enable collector configuration. Allowed values are true and false"
          },
          "telemetryCollector": {
            "$ref": "#/components/schemas/NorthboundCollectorDetails"
          },
          "enableSupport": {
            "type": "boolean",
            "example": true,
            "description": "Description: This flag enables customer support team to perform operation on operators network or devices. Allowed values are true and false."
          },
          "enableDebug": {
            "type": "boolean",
            "example": true,
            "description": "Description: This flag used enables customer support team to perform SSH like operations on operator devices. Allowed values are true and false."
          },
          "policies": {
            "$ref": "#/components/schemas/OperatorPolicy"
          }
        },
        "description": "Operator details response model."
      },
      "NorthboundUser": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "7777dds7-5c5c-444f-8888-d7f77733f7e7",
            "description": "User's Id"
          },
          "firstName": {
            "type": "string",
            "example": "John",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "example": "Kite",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "example": "johnk@taranawireless.com",
            "description": "User's email id"
          },
          "mobile": {
            "type": "string",
            "example": "9999888822",
            "description": "User's contact number. Supported formats are xxxxxxxxxx, xxx xxx xxxx, (xxx) xxx-xxxx, +xxx (xxx) xxx-xxxx, xxx xxx xxx, +xxx xxx xxx xxx, xxx xx xx xx, +xxx xxx xx xx xx"
          },
          "address": {
            "type": "string",
            "example": "8745 Glacier Hwy, Juneau, AK 99801, USA",
            "description": "User's address"
          },
          "city": {
            "type": "string",
            "example": "Juneau",
            "description": "City"
          },
          "state": {
            "type": "string",
            "example": "Alaska",
            "description": "State"
          },
          "country": {
            "type": "string",
            "example": "USA",
            "description": "Country"
          },
          "pincode": {
            "type": "string",
            "example": "211201",
            "description": "Pincode"
          },
          "retailerId": {
            "type": "string",
            "example": "1",
            "description": "Retailer Id"
          },
          "retailerName": {
            "type": "string",
            "example": "Retailer-2, if empty string('') that means applicable to all retailer",
            "description": "Retailer Name"
          },
          "operatorId": {
            "type": "string",
            "example": "1",
            "description": "Id of the operator to which the user belongs"
          },
          "assignedRoles": {
            "type": "array",
            "description": "List of role(s) assigned to the user",
            "uniqueItems": true,
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          },
          "logInTimeSeconds": {
            "type": "integer",
            "format": "int64",
            "example": 1672984837,
            "description": "User's login time in seconds"
          },
          "lastLoginTimeMillis": {
            "type": "integer",
            "format": "int64",
            "example": 1672984837384,
            "description": "User's last login time in milliseconds"
          },
          "creationTimeMillis": {
            "type": "integer",
            "format": "int64",
            "example": 1672984837384,
            "description": "User creation time in milliseconds"
          },
          "eulaAccept": {
            "type": "boolean",
            "example": true,
            "description": "If user has accepted the end user license"
          },
          "eulaAcceptTimeMillis": {
            "type": "integer",
            "format": "int64",
            "example": 1672984837384,
            "description": "End user license accepted time in milliseconds"
          }
        },
        "description": "User details response model"
      },
      "NorthboundUserResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NorthboundUser"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "UserRole": {
        "type": "object",
        "required": [
          "roleId"
        ],
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32",
            "example": 1,
            "description": "Role id"
          },
          "roleName": {
            "type": "string",
            "example": "OP Admin",
            "description": "Role name"
          },
          "roleDescription": {
            "type": "string",
            "example": "User with this role can have all the permissions of NOC operator, and permission to use network config UI within own scope.",
            "description": "Description about the role"
          }
        },
        "description": "Details of role(s) assigned to the user"
      },
      "NorthboundSearchUserResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityNorthboundUser"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "PaginatedResponseEntityNorthboundUser": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NorthboundUser"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "MacAddressSearchRequest": {
        "type": "object",
        "properties": {
          "macAddresses": {
            "type": "array",
            "description": "List of mac-addresses to be searched for in format AA:BB:CC:DD:EE:FF",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MacAddressSearchApiResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MacAddressValues"
            }
          }
        }
      },
      "MacAddressValues": {
        "type": "object",
        "properties": {
          "mac_address": {
            "type": "string"
          },
          "search_result": {
            "$ref": "#/components/schemas/SearchResult"
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "serialNumber": {
            "type": "string",
            "description": "Device serial number which reported requested mac-address"
          },
          "entityType": {
            "type": "string",
            "description": "Device type which reported requested mac-address",
            "example": "RN"
          },
          "id": {
            "type": "string",
            "description": "Device id which reported requested mac-address",
            "example": "tarana:deviceSerial"
          },
          "connectedBn": {
            "type": "string",
            "description": "BN device serial associated with RN which reported requested mac-address"
          },
          "reportedTimestampMillis": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when this was reported by the device"
          },
          "resultMessage": {
            "type": "string",
            "description": "Optional additional information for requested mac-address",
            "example": "AA:BB:CC:DD:EE:FF is not associated with any RN within network hierarchy"
          },
          "ancestry": {
            "$ref": "#/components/schemas/NetworkHierarchy"
          }
        }
      },
      "SpeedTestSetBaselineRequest": {
        "type": "object",
        "required": [
          "operationId"
        ],
        "properties": {
          "operationId": {
            "type": "string",
            "example": "Operation Id",
            "description": "Operation Id"
          }
        },
        "description": "Speed test set baseline request"
      },
      "ServiceUpdateRequest": {
        "type": "object",
        "properties": {
          "services": {
            "$ref": "#/components/schemas/DeviceServices"
          }
        },
        "description": "Model to update services for an existing device."
      },
      "DeviceServices": {
        "type": "object",
        "properties": {
          "ssh": {
            "$ref": "#/components/schemas/DevicePortService"
          }
        },
        "description": "Model includes a list of attribute required to update device port."
      },
      "DevicePortService": {
        "type": "object",
        "required": [
          "port"
        ],
        "properties": {
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "The service port number for the device. Allowed values are: 22, 80, 443, with port 22 support currently available."
          },
          "enable": {
            "type": "boolean",
            "description": "Device port to be enable or disable. Allowed values: true or false."
          }
        },
        "description": "Model includes a list of attribute required to update device port.Note: The fields marked with * are mandatory."
      },
      "PolicyUpdateRequest": {
        "type": "object",
        "properties": {
          "policies": {
            "$ref": "#/components/schemas/OperatorPolicy"
          }
        },
        "description": "Model to update policies for an Operator."
      },
      "DeleteOperatorPolicy": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "description": "List of policies need to be deleted. Possible value is ssh",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Model to delete policies for an operator. "
      },
      "OperatorPolicy": {
        "type": "object",
        "properties": {
          "ssh": {
            "$ref": "#/components/schemas/OperatorPortPolicy"
          }
        },
        "description": "Model includes a list of operator policy."
      },
      "OperatorPortPolicy": {
        "type": "object",
        "properties": {
          "enableForRn": {
            "type": "boolean",
            "description": "Enable or disable the policy for RN devices under the operator. Allowed values: true or false. Default value: false"
          },
          "enableForBn": {
            "type": "boolean",
            "description": "Enable or disable the policy for BN devices under the operator. Allowed values: true or false."
          }
        },
        "description": "Model includes a list of attribute required to update operator port. Note: The fields marked with * are mandatory."
      },
      "AlarmDetails": {
        "type": "object",
        "properties": {
          "isCleared": {
            "type": "boolean",
            "description": "Alarm's raise/clear status flag",
            "example": "true"
          },
          "source": {
            "type": "string",
            "description": "Alarm's source",
            "example": "BN"
          },
          "severity": {
            "type": "string",
            "description": "Alarm's severity",
            "example": "INDETERMINATE"
          },
          "deviceId": {
            "type": "string",
            "description": "serialNumber of the device.",
            "example": "S111F1202200226"
          },
          "operator": {
            "type": "string",
            "description": "Operator Name",
            "example": "Acme"
          },
          "retailer": {
            "type": "string",
            "description": "Retailer Name",
            "example": "Retailer-2"
          },
          "region": {
            "type": "string",
            "description": "Region Name",
            "example": "Alaska"
          },
          "market": {
            "type": "string",
            "description": "Market Name",
            "example": "Juneau"
          },
          "site": {
            "type": "string",
            "description": "Site Name.",
            "example": "Nugget Mall Rooftop"
          },
          "cell": {
            "type": "string",
            "description": "Cell Name",
            "example": "Cell-0"
          },
          "sector": {
            "type": "string",
            "description": "Sector Name",
            "example": "Sector-2"
          },
          "id": {
            "type": "string",
            "description": "Alarm's Id",
            "example": "dialout-failure"
          },
          "text": {
            "type": "string",
            "description": "Alarm's text",
            "example": "Current value(10) >= maximum threshold(5)"
          },
          "timeCreated": {
            "type": "integer",
            "format": "int64",
            "description": "Time when the alarm was reported",
            "example": "1712136109645448960"
          },
          "deviceHostName": {
            "type": "string",
            "description": "Hostname of the device.",
            "example": "S144T1212101212"
          },
          "resource": {
            "type": "string",
            "description": "Alarm's resource",
            "example": "/system/clock/state/gps"
          },
          "typeId": {
            "type": "string",
            "description": "Alarm's type id",
            "example": "COMMUNICATION"
          },
          "bnId": {
            "type": "string",
            "description": "BN ID associated with the alarm.",
            "example": "oneplus"
          },
          "softwareVersion": {
            "type": "string",
            "description": "Device software version",
            "example": "SYS.A3.P10.XXX.0.910.001.03"
          },
          "status": {
            "type": "string",
            "description": "Status of the alarm.",
            "example": "ACK"
          },
          "acknowledgementNote": {
            "type": "string",
            "description": "acknowledgement note of the alarm.",
            "example": "acknowledging alarm for oneplus"
          },
          "raiseCount": {
            "type": "integer",
            "description": "Number of times the alarm was raised.",
            "example": "1"
          },
          "displayResource": {
            "type": "string",
            "description": "Display resource for the alarm.",
            "example": "Radio Device"
          },
          "maxThreshold": {
            "type": "string",
            "description": "Maximum threshold for the alarm.",
            "example": "1.0E20"
          },
          "minThreshold": {
            "type": "string",
            "description": "Minimum threshold for the alarm.",
            "example": "1.0E20"
          },
          "displayId": {
            "type": "string",
            "description": "Display id for the alarm.",
            "example": "link-health-check-failure"
          },
          "radioType": {
            "type": "string",
            "description": "Radio type for alarms",
            "example": "TCS"
          },
          "recommendedAction": {
            "type": "string",
            "description": "Recommended action for the alarm.",
            "example": "Ensure the BN/RN has an unobstructed view of the sky."
          },
          "raiseAction": {
            "type": "string",
            "description": "Alarm's raise action",
            "example": "REBOOT"
          }
        },
        "description": "Alarm details response model"
      },
      "PaginatedResponseEntityNorthboundAlarmDetails": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlarmDetails"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AlarmDetailsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResponseEntityNorthboundAlarmDetails"
          },
          "error": {
            "$ref": "#/components/schemas/ApiResponseStatus"
          }
        }
      },
      "AlarmStatusUpdateRequest": {
        "type": "object",
        "properties": {
          "alarms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlarmStatusUpdate"
            }
          }
        }
      },
      "AlarmStatusUpdate": {
        "type": "object",
        "properties": {
          "alarmId": {
            "type": "string",
            "description": "Alarm's Id",
            "example": "dialout-failure"
          },
          "resourceId": {
            "type": "string",
            "description": "Alarm's resource",
            "example": "/system/clock/state/gps"
          },
          "note": {
            "type": "string",
            "description": "Notes for updating status operation",
            "example": "changing alarm status to ACK"
          }
        }
      },
      "ChangeCellParentRequest": {
        "type": "object",
        "required": [
          "newMarketName",
          "newRegionName",
          "newSiteName"
        ],
        "properties": {
          "newRegionName": {
            "type": "string",
            "description": "Description: Name of the parent of existing entity. ex: market’s parent name is name of an existing region."
          },
          "newMarketName": {
            "type": "string",
            "description": "Description: Name of the parent of existing entity. ex: market’s parent name is name of an existing region."
          },
          "newSiteName": {
            "type": "string",
            "description": "Description: Name of the parent of existing entity. ex: market’s parent name is name of an existing region."
          }
        },
        "description": "Model to change parent of an existing entity. Note: The fields marked with * are mandatory."
      },
      "ChangeSiteParentRequest": {
        "type": "object",
        "required": [
          "newMarketName",
          "newRegionName"
        ],
        "properties": {
          "newRegionName": {
            "type": "string",
            "description": "Description: Name of the parent of existing entity. ex: market’s parent name is name of an existing region."
          },
          "newMarketName": {
            "type": "string",
            "description": "Description: Name of the parent of existing entity. ex: market’s parent name is name of an existing region."
          }
        },
        "description": "Model to change parent of an existing entity. Note: The fields marked with * are mandatory."
      },
      "ChangeMarketParentRequest": {
        "type": "object",
        "required": [
          "newRegionName"
        ],
        "properties": {
          "newRegionName": {
            "type": "string",
            "description": "Description: Name of the parent of existing entity. ex: market’s parent name is name of an existing region."
          }
        },
        "description": "Model to change parent of an existing entity. Note: The fields marked with * are mandatory."
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  },
  "x-amazon-apigateway-gateway-responses": {
    "MISSING_AUTHENTICATION_TOKEN": {
      "statusCode": 403,
      "responseParameters": {
        "gatewayresponse.header.Strict-Transport-Security": "'max-age=31536000; always'",
        "gatewayresponse.header.Content-Security-Policy": "'frame-ancestors none; always'",
        "gatewayresponse.header.Referrer-Policy": "'strict-origin; always'",
        "gatewayresponse.header.X-Frame-Options": "'SAMEORIGIN'",
        "gatewayresponse.header.X-Content-Type-Options": "'nosniff'",
        "gatewayresponse.header.Access-Control-Allow-Origin": "'https://portal.cloud.taranawireless.com'"
      },
      "responseTemplates": {
        "application/json": "{ \"data\": null, \"error\": { \"code\": 403, \"message\": \"The HTTP method or resources may not be supported.\", \"status\": \"Unsupported API\" } }"
      }
    },
    "RESOURCE_NOT_FOUND": {
      "statusCode": 404,
      "responseParameters": {
        "gatewayresponse.header.Access-Control-Allow-Origin": "'https://portal.cloud.taranawireless.com'"
      },
      "responseTemplates": {
        "application/json": "{ \"data\": null, \"error\": { \"code\": 404, \"message\": \"Resource not found.\", \"status\": \"RESOURCE_NOT_FOUND\" } }"
      }
    },
    "UNSUPPORTED_MEDIA_TYPE": {
      "statusCode": 415,
      "responseParameters": {
        "gatewayresponse.header.Access-Control-Allow-Origin": "'https://portal.cloud.taranawireless.com'"
      },
      "responseTemplates": {
        "application/json": "{\n  \"data\": null,\n  \"error\": {\n    \"code\": 415,\n    \"message\": \"HTTP 415 Unsupported Media Type\",\n    \"status\": \"Unsupported Media Type\"\n  }\n}"
      }
    },
    "INVALID_API_KEY": {
      "statusCode": 403,
      "responseParameters": {
        "gatewayresponse.header.Strict-Transport-Security": "'max-age=31536000; always'",
        "gatewayresponse.header.Content-Security-Policy": "'frame-ancestors none; always'",
        "gatewayresponse.header.Referrer-Policy": "'strict-origin; always'",
        "gatewayresponse.header.X-Frame-Options": "'SAMEORIGIN'",
        "gatewayresponse.header.X-Content-Type-Options": "'nosniff'",
        "gatewayresponse.header.Access-Control-Allow-Origin": "'https://portal.cloud.taranawireless.com'"
      },
      "responseTemplates": {
        "application/json": "{ \"data\": null, \"error\": { \"code\": 403, \"message\": \"Invalid API Key.\", \"status\": \"Forbidden\" } }"
      }
    },
    "INTEGRATION_FAILURE": {
      "statusCode": 504,
      "responseParameters": {
        "gatewayresponse.header.Access-Control-Allow-Origin": "'https://portal.cloud.taranawireless.com'"
      },
      "responseTemplates": {
        "application/json": "{ \"data\": null, \"error\": { \"code\": 504, \"message\": \"Integration failed error.\" \"status\": \"INTEGRATION_FAILURE\" } }"
      }
    }
  },
  "x-amazon-apigateway-minimum-compression-size": 1024,
  "x-amazon-apigateway-binary-media-types": [
    "multipart/form-data"
  ]
}